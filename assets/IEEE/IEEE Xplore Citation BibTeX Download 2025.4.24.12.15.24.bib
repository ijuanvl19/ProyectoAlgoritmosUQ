@INPROCEEDINGS{9225879,
  author={He, Zhenyu and Zhao, Haihu},
  booktitle={2019 IEEE International Conference on Engineering, Technology and Education (TALE)}, 
  title={Practical Exploration of Integrating Computational Thinking into University Computer Foundation Education}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={Computational thinking is an important concept that is widely concerned by international computer community, and it is considered as an important way to carry out university computer education reform. This paper firstly analyzes the existing problems in university computer teaching for non-computer majors, and then it discusses a series of teaching practices that integrate computational thinking into university computer teaching, including: (1) Students are divided into different classes according to their computer proficiency; (2) We abandon the concept of “Narrow Instrumentalism”, and teach the most essential knowledge of computer foundation; (3) We propose the “data” as the mainline, and then reconstruct teaching content according to the mainline; (4) We also reconstruct experimental content with the mainline, and separate experimental teaching into a single course. The practices has proved that the teaching methods put forward in this paper yield good results, and it provides a new model for University Computer Foundation teaching, which aims at improving students’ computational thinking.},
  keywords={Education;Software;Instruments;Databases;Programming profession;computational thinking;university computer foundation;teaching reform;non-computer major},
  doi={10.1109/TALE48000.2019.9225879},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9546563,
  author={Gong, Di and Yang, Harrison Hao and Cai, Jin},
  booktitle={2021 International Symposium on Educational Technology (ISET)}, 
  title={Investigating the Flipped-classroom Approach on College Students’ Computational Thinking Skills}, 
  year={2021},
  volume={},
  number={},
  pages={207-210},
  abstract={The study aims to examine the effectiveness of flipped-classroom instruction on college students’ computational thinking skills (CTS). Participants were enrolled in the basic computer course from two classes at a university in central China. One class as an experimental group was chosen for the flipped-classroom instruction method (n=55); the other as a control group used the traditional lecture-based instruction method (n=54). The results show that learning through the flipped-classroom approach can significantly promote students’ levels of creativity, algorithmic thinking, cooperativity, and critical thinking, compared with the traditional lecture-based instruction approach. The findings of this research suggest that instructors should be encouraged to take the flipped-classroom instruction method to teach.},
  keywords={Educational technology;Creativity;computational thinking skills;flipped-classroom instruction;traditional lecture-based instruction;quasi-experiment},
  doi={10.1109/ISET52350.2021.00050},
  ISSN={2766-2144},
  month={Aug},}@INPROCEEDINGS{10541025,
  author={Chen, Yuxi and Zhao, Yang and Wang, Min},
  booktitle={2024 13th International Conference on Educational and Information Technology (ICEIT)}, 
  title={An Empirical Study on the Effect of Gamified Teaching in Scratch Courses on Developing Elementary Students' Computational Thinking}, 
  year={2024},
  volume={},
  number={},
  pages={78-83},
  abstract={Computational thinking is a crucial skill for students to analyze and solve problems, and programming education serves as an important pathway to cultivate computational thinking. This study combines relevant literature and utilizes Scratch, a visual programming software, to construct a gamified teaching model for Scratch courses. A quasi-experimental research design was employed, involving two fifth-grade classes from a primary school in K city. The study employed methods such as analysis of student works, SPSS scale data analysis, and student interviews to investigate the impact of gamified teaching in Scratch courses on developing elementary students' computational thinking. The results indicate that gamified teaching in Scratch courses significantly enhances the computational thinking level of elementary students, particularly in the dimensions of critical thinking, problem-solving ability, and algorithmic thinking. Based on the research findings, it is recommended that gamified teaching in Scratch courses should involve appropriate teaching tools, incorporate game-based learning, emphasize problem-solving, encourage collaborative learning, and provide training for educators competent in programming education.},
  keywords={Training;Visualization;Federated learning;Education;Urban areas;Software;Problem-solving;scratch;gamification;elementary students;computational thinking;empirical study},
  doi={10.1109/ICEIT61397.2024.10541025},
  ISSN={},
  month={March},}@ARTICLE{9020189,
  author={Lin, Pei-Hsuan and Chen, Shih-Yeh},
  journal={IEEE Access}, 
  title={Design and Evaluation of a Deep Learning Recommendation Based Augmented Reality System for Teaching Programming and Computational Thinking}, 
  year={2020},
  volume={8},
  number={},
  pages={45689-45699},
  abstract={Programming is considered a skill to arouse and inspire learner's potential. Learning to program is a complex process that requires students to write grammar and instructions. The structure of a programming language does not cause impose problems to students, the real obstacle is how to apply these learned grammars and present them in a complete and correct program code for problem solving. In this study, a deep learning recommendation system was developed, which includes augmented reality (AR) technology, and learning theory, and is provided for study by students in non-major and also from different learning backgrounds. Those students divided into two groups, the students participating in the experimental group were using the AR system with deep learning recommendation and the students participating in the control group were using the AR system without deep learning recommendation. The results show that students in experimental group perform better than the control group with regards to learning achievement. On the other hand, in the part of computational thinking ability, students using a deep learning recommendation based AR system is significantly better than those using non-deep learning recommendation based AR system. Among the various dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills are significantly different among the two groups of students. The students in experimental group perform better than the control group with regards to the dimensions of computational thinking, creativity, logical computing, critical thinking, and problem-solving skills.},
  keywords={Machine learning;Education;Programming profession;Problem-solving;Grammar;Augmented reality;Deep learning recommendation;computational thinking;AR technology},
  doi={10.1109/ACCESS.2020.2977679},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{9799068,
  author={Gonzalez-Torres, Antonio and Sancho-Chavarria, Lilliana and Zuniga-Cespedes, Magaly and Monge-Fallas, Jorge and Navas-Su, Jose},
  booktitle={2021 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={A strategy to assess computational thinking}, 
  year={2021},
  volume={},
  number={},
  pages={1037-1042},
  abstract={Computational Thinking (CT) is a method of analysis and problem solving that enables the development of life skills and positively influences the social and competitive conditions of people. This type of thinking promotes learning through the application of planning, analysis, abstraction and decomposition of problems into their constituent parts. In addition, PC contributes to the formation of critical thinking, creativity and cooperation between people. In education, the mechanisms used to foster CP are diverse; among them, learning through programming. Databases of source code generated in learning exercises using the CP method are a valuable tool for discovering learning patterns. However, there are no robust and scalable methods for studying the huge source code bases of learning products to recognize the predominant patterns and determine the effectiveness of the method. Consequently, a comprehensive analysis of learners’ skills, knowledge, outcomes and performance levels is necessary to identify points of improvement to meet learning objectives and modify curricula and exercises. This paper presents the joint research between the Costa Rica Institute of Technology (TEC) and the PRONIE MEP-FOD program of the Omar Dengo Foundation. Its objective is to automatically analyze the source code created by the students, evaluate the Computational Thinking skills they developed and compare the results with the learning objectives established in the study plans.},
  keywords={Measurement;Codes;Scientific computing;Education;Software;Planning;Pattern recognition;Computation thinking;program analysis;automatic grading},
  doi={10.1109/CSCI54926.2021.00222},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10487449,
  author={Gonzalez-Torres, Antonio and Ramirez-Trejos, Elliot and Sancho-Chavarria, Lilliana and Navas-Su, Jose and Garita, Cesar and Monge-Fallas, Jorge},
  booktitle={2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)}, 
  title={Towards the Assessment of Basic Computational Thinking Skills Using Syntactic Analysis Techniques}, 
  year={2023},
  volume={},
  number={},
  pages={1090-1095},
  abstract={This article introduces an exploratory method for automatically grading programming exam questions using syntactic analysis. The target problem is the lack of a robust, scalable, and automated method to analyze computational thinking skills from source code written by elementary school students. The proposed method uses a variety of techniques to assess student responses, including analyzing the programming structure, programming correctness, and code execution based on certain parameters defined during the exercise specification. Analysis of the source code and evaluation of the answers to the exercises are carried out using high performance computing to improve the response time of the system. This preliminary work will contribute to a robust method for automated exam scoring, which is expected to assess and support the development of computational thinking among students.},
  keywords={Codes;Source coding;High performance computing;Prototypes;Cloning;Programming;Syntactics;Automatic evaluation;computational thinking;source code analysis;abstract syntax trees},
  doi={10.1109/CSCE60160.2023.00181},
  ISSN={},
  month={July},}@INPROCEEDINGS{10645865,
  author={Rao, Toluchuri Shalini Shankar and Tiwari, Ajay Shankar and Mitra, Utanko and Bhagat, Kaushal Kumar},
  booktitle={2024 IEEE International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Effectiveness of marker-based augmented reality game on computational thinking skills and cognitive load for middle school students}, 
  year={2024},
  volume={},
  number={},
  pages={222-226},
  abstract={Computational thinking (CT) gained significant importance in education, leading to a surge in the development of dedicated instructional platforms. The cultivation of students’ CT skills posed a challenge, often involving the introduction of abstract and challenging-to-visualize programming concepts. This study aimed to bridge this gap by introducing an augmented reality-based coding game—an interactive learning platform designed to facilitate students in acquiring programming skills and enhancing their grasp of computational thinking concepts. The augmented reality (AR) digital game is specifically directed towards fundamental CT skills, such as pattern recognition, decomposition, abstraction, and developing algorithms. To evaluate the effectiveness of the AR game in enhancing CT skills, a study was conducted with 124 middle school students, entailing in grades 6th and 8th. The experimental group (N = 63) utilized the AR game, while the control group (N = 61) relied on conventional text materials. The findings of the experiment strongly supported the integration of AR technology along with game-based learning as a means to enhance CT knowledge and skills while simultaneously reducing cognitive load.},
  keywords={Codes;Education;Games;Writing;Cognitive load;Encoding;Pattern recognition;Augmented reality;computational thinking;game-based learning;cognitive load},
  doi={10.1109/ICALT61570.2024.00071},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{9627365,
  author={Fanfarelli, Joey R.},
  booktitle={2021 IEEE/ACIS 20th International Fall Conference on Computer and Information Science (ICIS Fall)}, 
  title={Assessing Computational Thinking Pedagogy in Serious Games Through Questionnaires, Think-aloud Testing, and Automated Data Logging}, 
  year={2021},
  volume={},
  number={},
  pages={149-152},
  abstract={Computational thinking is an important skill for solving complex problems, including processes such as decomposition, pattern recognition, abstraction, and algorithmic design. Game-based learning has recently seen an increase in prevalence for teaching computational thinking, making games an important topic of study. However, there is currently no validated tool for assessing Computational Thinking (CT) that performs reliably across disciplines and age groups. In the absence of such a tool, this paper examines several software testing methods for the evaluation of CT pedagogy effectiveness within serious games. Namely, it makes recommendations for the application of standardized questionnaires, think-aloud testing, and automated data logging for evaluating games that promote CT learning. It concludes with a potential use case to demonstrate how the methods can be combined to achieve a granular and actionable understanding of a complex CT assessment problem and its causes.},
  keywords={Software testing;Information science;Bibliographies;Education;Games;Manuals;Tools;serious games;game;gaming;computational thinking;algorithmic thinking;test;testing;assessment;development},
  doi={10.1109/ICISFall51598.2021.9627365},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10261600,
  author={Wang, Fan and Chen, Lan and Wang, Wei},
  booktitle={2023 5th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={Design and Effectiveness Analysis of Interactive Strategies for Teaching Graphical Programming Oriented to Cultivate Computational Thinking}, 
  year={2023},
  volume={},
  number={},
  pages={10-14},
  abstract={Computational thinking is the third major mode of thinking in the age of artificial intelligence. Many primary and secondary schools adopt graphical programming as an important way for students' computational thinking development. However, elementary school students have less self-control in learning and are more dependent on teachers, so timely and effective teaching interaction is an important guarantee for the realization of the teaching goals of graphical programming. Through three rounds of action research, the essay investigated the impact of teaching interaction strategies on the development of students' computational thinking. The findings show that students are satisfied with the designed interaction strategies, and the interaction strategies can significantly improve students' computational thinking ability and level.},
  keywords={Education;Artificial intelligence;Programming profession;computational thinking;computer-assisted learning;graphical programing;teaching interaction},
  doi={10.1109/CSTE59648.2023.00009},
  ISSN={},
  month={April},}@INPROCEEDINGS{7126261,
  author={Chuang, Hui-Chi and Hu, Chiu-Fan and Wu, Cheng-Chih and Lin, Yu-Tzu},
  booktitle={2015 International Conference on Learning and Teaching in Computing and Engineering}, 
  title={Computational Thinking Curriculum for K-12 Education -- A Delphi Survey}, 
  year={2015},
  volume={},
  number={},
  pages={213-214},
  abstract={The purpose of this study is to design a computational thinking curriculum standard for K-12 education. The Delphi technique was employed to collect different views and derive consensus from a panel of thirteen experts, including computer scientists, computer science educators, K-12 computer teachers, and industry experts. The first draft of Delphi survey questionnaire, consisting of nine themes (problem solving, problem decomposition, algorithms, data representation, data analysis, modeling and simulation, abstraction, automation, and others) and 60 competence indicators, was developed based on our investigation of the nature of computational thinking. After three rounds of survey and a final round-table discussion, the expert panel derived 49 essential competence indicators (13 for grades K to 6, nine for grades 7 to 9 and 27 of grades 10 to 12) and eight optional competence indicators (one for grades 7 to 9 and seven for grades 10 to 12). According to the results, the core ability and training of computational thinking are different in grades. In grades K to 6, students develop logical thinking and problem solving skills in personal and family life. In grades 7 to 9, students must understand the basic concepts of programming and write basic programs. Finally, in grades 10 to 12, they will use high-level skills to apply the concepts of abstraction, modeling, and structured problem decomposition to solve problems in different fields. The results serve as useful references for developing Taiwan's new K-12 computing curriculum.},
  keywords={Computational modeling;Analytical models;Data models;Computers;Education;Computer science;Standards;Computing Curriculum;K-12 education;Computational Thinking;Delphi Survey},
  doi={10.1109/LaTiCE.2015.44},
  ISSN={},
  month={April},}@INPROCEEDINGS{10812249,
  author={Triantafyllou, Serafeim A. and Sapounidis, Theodosios and Oikonomou, Andreas},
  booktitle={2024 32nd National Conference with International Participation (TELECOM)}, 
  title={Trying to Develop and Assess Computational Thinking in Computer Science Unplugged Activities with Gamification}, 
  year={2024},
  volume={},
  number={},
  pages={1-4},
  abstract={Developing computational thinking through Computer Science Unplugged activities is a fantastic way to introduce students to the core concepts of computing without the need for programming tools. These activities are interactive, engaging, and help learners build problem-solving and logical reasoning skills. CT in CS Unplugged activities involves evaluating how well the activities promote the core components of CT, which are fundamental skills in algorithmic thinking and problem-solving. This paper tries to contribute to a better understanding of the related field.},
  keywords={Taxonomy;Games;Cognition;Telecommunications;Problem-solving;Programming profession;computational thinking;computer science unplugged activities;gamification},
  doi={10.1109/TELECOM63374.2024.10812249},
  ISSN={2837-5246},
  month={Nov},}@INPROCEEDINGS{9332734,
  author={Srisangngam, Pichet and Dechsura, Chaiyos},
  booktitle={2020 5th International STEM Education Conference (iSTEM-Ed)}, 
  title={STEM Education Activities Development to Promote Computational Thinking’s Students}, 
  year={2020},
  volume={},
  number={},
  pages={103-105},
  abstract={This research aims to develop STEM learning activities for promote student's computational thinking skills and the results of this learning activities toward computational thinking of senior school student in the computing classroom. The study groups were 30 secondary school students in Pranakorn Si Ayutthaya who were studying in Semester 1, Academic Year 2019. They were selected by purposive sampling method. The research instruments were; (1) STEM education lesson plans for computational thinking developments; (2) The student's journals; and (3) Computational thinking test. The research was divided into three phases. The first phase focused on design lesson plans and learning activities for developing student's computational thinking skills. The second phase is implement the lesson plans and learning activities with the study group. The third phase is evaluation of the effectiveness of learning activities on develop student's computational thinking skills. The results shown learning activities can develop student's computational thinking skills, because of these activities were challenged students with real everyday life problems that required to used their computational thinking to solve the problems by decompose problems, find pattern recognition, abstraction thinking and develop algorithm for computer programming. So, these STEM learning activities could be effectively used in Computing course.},
  keywords={Instruments;Education;Sampling methods;Silicon;Pattern recognition;Programming profession;STEM;Computational thinking;STEM Education.},
  doi={10.1109/iSTEM-Ed50324.2020.9332734},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{7357215,
  author={Worrell, Benjamin and Brand, Catharine and Repenning, Alexander},
  booktitle={2015 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Collaboration and Computational Thinking: A classroom structure}, 
  year={2015},
  volume={},
  number={},
  pages={183-187},
  abstract={Building a classroom environment based on student-led, meaningful collaboration is an ideal being promoted by educators and administrators seeking to equip students with 21st century workforce skills. More and more often, teachers are challenged to design lessons that utilize students' innate desire to communicate with one another rather than more traditional direct instruction. With a heavy focus on student-driven instruction and a reduced role for direct instruction, Carson Middle School's Game Design I course is able to utilize collaboration as a means for allowing students to not only learn but master and retain Computational Thinking Patterns and apply them in formal summative assessments. Through the collection of these data points throughout the course of a semester of learning, an educator can fully appreciate the learning of Computational Thinking skills that occurs as students build a sequence of games and simulations.},
  keywords={Programming;computational thinking;computational thinking patterns;assessment;collaborative programming;middle school computer education;game design},
  doi={10.1109/VLHCC.2015.7357215},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8626930,
  author={Rozali, Nurul Faizah and Zaid, Norasykin Mohd and Noor, Norah Md and Ibrahim, Nor Hasniza},
  booktitle={2018 IEEE 10th International Conference on Engineering Education (ICEED)}, 
  title={Developing A Unified Model of Teaching Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={208-213},
  abstract={Soft skills are important criteria in preparing for a viable future employment, the lack of which, may result in a low employment rate among university graduates. These skills can be acquired via the use of Computational Thinking (CT) to cultivate problem solving and thinking skills. Since the inception of CT, however, not a single unified model has been developed as a guideline for educators. Based on the relevant articles available in IEEE Xplore Digital Library, Springer and ScienceDirect Journal, this paper comparing different CT models that focus on different CT dimensions which is concepts, practices and perspectives.},
  keywords={Computational modeling;Programming profession;Education;Taxonomy;Problem-solving;Data models;computational thinking;soft skill;employment;problem solving;thinking},
  doi={10.1109/ICEED.2018.8626930},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{9690630,
  author={Zhao, Danqing and Li, Yatao},
  booktitle={2022 11th International Conference on Educational and Information Technology (ICEIT)}, 
  title={Research on the Educational Model of Computational Thinking Cultivation in Primary and Middle Schools Oriented to Production-Based Learning}, 
  year={2022},
  volume={},
  number={},
  pages={10-15},
  abstract={Project-Based Learning and STEAM Education are widely favored by schools and teachers because both of them are student-centered learning models by allowing students to collaborate and explore around issues in order to promote the development of students' learning in the 21st century. However, in practical pedagogical applications, specific educational models and implementations are highly dependent on exceptional teachers with innovative abilities, especially in the cultivation of implicit higher-order thinking of students still lacking a better landing point. In the context of the current era of rapid development of information technology, the educational changes caused by the new development of smart education mean that more attention should be paid to the level of thinking and operational skills of students. As a result, the Problem-Based Learning for Computational Thinking Development Model for Primary and Secondary Schools (CTPBL), which is interdisciplinary, contextual, innovative, experiential and humanistic in nature, has emerged. As a new educational model, CTPBL helps integrate the advantages of existing Project-Based Learning and STEAM Education, crack the dilemma of teachers' choice of the inherent educational model, and realize the cultivation of students' information literacy and the improvement of their comprehensive ability. However, it still needs to be further explored, such as its operation mechanism, technology carrier, and teachers' roles.},
  keywords={Training;Printing;Solid modeling;Computational modeling;Virtual reality;Production;Information age;project-based learning;production-based learning;interdisciplinary learning;computational thinking;educational model},
  doi={10.1109/ICEIT54416.2022.9690630},
  ISSN={},
  month={Jan},}@INPROCEEDINGS{9155698,
  author={Hu, Chih-Chien and Tseng, Hsiao-Ting and Chen, Ming-Hsien and Goh Phaik Imm, Alexis and Chen, Nian-Shing},
  booktitle={2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Comparing the effects of robots and IoT objects on STEM learning outcomes and computational thinking skills between programming-experienced learners and programming-novice learners}, 
  year={2020},
  volume={},
  number={},
  pages={87-89},
  abstract={Recent college students have been observed to be motivated and engaged in acquiring science, technology, engineering, and mathematics (STEM) knowledge and skills with robots and IoT objects. A sample of 13 master's students participated in the program. Data collected include the pre-and post- STEM and computational thinking (CT) written tests, and the pre- and post- surveys of learning perceptions toward the robots and IoT objects learning activities. The results show that the learning activities were an effective approach for the master's students' STEM learning outcome and CT as shown in the post-test. The differences between the master's students' STEM learning outcome, CT, and perceptions were also confirmed, particularly between the groups of computer programming-experienced learners and computer programming-novice learners. The results revealed that the learning activities with robots and IoT objects could improve the overall master's students' CT, STEM knowledge, and learning perceptions. Both programming-experienced and programming-novice learners' STEM learning outcome were improved.},
  keywords={Programming profession;Educational robots;STEM;Computational thinking;IoT;Learning perception;Robot-assisted learning;STEM learning},
  doi={10.1109/ICALT49669.2020.00033},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{8753395,
  author={Huang, Wei-Yeh and Hu, Chiu-Fan and Wu, Cheng-Chih},
  booktitle={2018 International Conference on Learning and Teaching in Computing and Engineering (LaTICE)}, 
  title={The Use of Different Kinds of Robots to Spark Student Interest in Learning Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={11-16},
  abstract={Educational robots have been used in schools for STEM education and for teaching students programming and computational thinking (CT) for many years. The look and feel of traditional robots for educational purposes such as LEGO Mindstorms and NXT have been mostly engineering-oriented. Not until recently, have robotic products such as Dash & Dot utilized physical appearance which were cute and kid-friendly. This study compared the effects of using two kinds of robots- Dash & Dot and LEGO NXT, in terms of students' performance, student's attitudes about learning activities, and how different genders respond to various robots. A Quasi-Experimental Design was conducted. The participants consisted of 106 6th graders from four classes of students. Two classes were designated as the experimental groups which used Dash & Dot robots,). The other two classes of students were the control groups which used NXT robots. With respect to students' attitudes toward learning, the study showed no significant difference between experimental and control groups. With respect to learning programming skills, it was found that females in the experimental group prefer to use robots. Females showed a definite preference for using the Dash & Dot robots.},
  keywords={Computational thinking;Robot;Gender},
  doi={10.1109/LaTICE.2018.00-13},
  ISSN={2475-1057},
  month={April},}@ARTICLE{10213395,
  author={Chang, Chu-Yang and Du, Zhengyi and Kuo, Hsu-Chan and Chang, Chih-Ching},
  journal={IEEE Transactions on Education}, 
  title={Investigating the Impact of Design Thinking-Based STEAM PBL on Students’ Creativity and Computational Thinking}, 
  year={2023},
  volume={66},
  number={6},
  pages={673-681},
  abstract={Contribution: This study represents the first systematic attempt to develop Science, Technology, Engineering, Arts, and Mathematics (STEAM) integrated project-based learning (PBL) as a transdisciplinary teaching method for fostering students’ creativity and computational thinking (CT) skills. Background: With the growing importance of creativity and CT skills in the modern world, there is a need for innovative teaching methods that can effectively nurture these abilities in students. This study explores the potential of integrating STEAM into PBL as a transdisciplinary teaching approach to address this need. Intended Outcomes: The outcomes of this approach include significant improvements in various dimensions of students’ creativity (fluency, flexibility, originality, and elaboration) and enhanced CT skills, particularly in medium and hard tasks. Application Design: The study involved 54 junior high school seventh-graders, with 28 students in the experimental group and 26 students in the comparison group. The experimental group was exposed to a semester of STEAM PBL, while the comparison group followed the regular curriculum. Findings: After a semester of STEAM PBL, the experimental group demonstrated significant improvements in creativity dimensions, while the comparison group showed no significant changes. In terms of CT skills, the experimental group exhibited significant improvements in medium and hard tasks, whereas the comparison group did not. These results highlight the potential benefits of integrating STEAM into PBL as a transdisciplinary teaching approach for enhancing students’ creativity and CT skills. The implications for educational practice and future research are discussed in depth.},
  keywords={Creativity;Education;Art;STEM;Games;Technological innovation;Task analysis;Computational thinking (CT);creativity;design thinking (DT);project-based learning (PBL);Science;Technology;Engineering;Arts;and Mathematics (STEAM)},
  doi={10.1109/TE.2023.3297221},
  ISSN={1557-9638},
  month={Dec},}@INPROCEEDINGS{8845505,
  author={Xu, Ling and Tong, Ming-Wen and Li, Bin and Meng, Jiang and Fan, Chen-Yao},
  booktitle={2019 14th International Conference on Computer Science & Education (ICCSE)}, 
  title={Application of Concept Map in the Study of Computational Thinking Training}, 
  year={2019},
  volume={},
  number={},
  pages={454-459},
  abstract={The call for innovative talents in the information age is imminent. With the promulgation of the domestic high school information technology curriculum standards in 2017, the formulation and positioning requirements of the core literacy of the disciplines, computational thinking as one of the four core literacy, is the thinking ability that everyone should have. Many foreign educational practice studies have shown that mind mapping can effectively promote students' cognitive development and knowledge construction. However, the domestic educational application research is relatively lacking in this aspect, and there is little research on the comprehensive and in-depth combination of it and the core literacy “computational thinking” of the specific information technology discipline. To this end, based on the research status at home and abroad, this paper attempts to use the concept map tool to represent several important functions of computational thinking, "definition of problems", "abstract function", "build model" and "Debugging and improvement". The diagram incorporates the teaching model in the computational thinking development curriculum. This study used quasi-experimental research methods to explore the effect of conceptual map tools on students' computational thinking. The research results show that this teaching method has a significant effect on the development of students' computational thinking.},
  keywords={Education;Tools;Programming;Visualization;Computational modeling;Creativity;Standards;computational thinking;concept map;project-based learning},
  doi={10.1109/ICCSE.2019.8845505},
  ISSN={2473-9464},
  month={Aug},}@INPROCEEDINGS{9759837,
  author={Surahman, Ence and Hua Wang, Tzu and Turner Lam, Kee-Fui and Sulthoni and Nendra Pratama, Ujang and Nur Aisyah, Eny},
  booktitle={2022 2nd International Conference on Information Technology and Education (ICIT&E)}, 
  title={Investigating Elementary Teachers' Understanding, Beliefs, and Intentions toward STEM and Computational Thinking in Education}, 
  year={2022},
  volume={},
  number={},
  pages={175-180},
  abstract={This study attempted to investigate elementary school teachers' understandings, beliefs, and intentions toward STEM and Computational Thinking. We collected data through a survey of 16 teachers at one elementary school in Malang City, Indonesia. They represented a variety of subjects with diverse learning experiences. The survey took place after the respondents received a short training about STEM and Computational Thinking. Quantitative analysis showed that most elementary school teachers positively demonstrated Computational Thinking practices in their schools. Besides, they believed that Computational Thinking could help students think logically, structurally, and creatively, while STEM helped train students to be problem solvers in an analytical, critical, and practical way. In addition, most respondents intended to continue learning and applying STEM and Computational Thinking approaches in their learning design. Added to this, the participants' understanding of STEM and Computational Thinking also improved based on the results of the Wilcoxon test conducted on the pre-test and post-test. This study provides valuable information on the need for elementary teacher development programs, namely improving teachers' teaching skills based on STEM and Computational Thinking for preparing students with 21 st-century learning skills.},
  keywords={Training;Statistical analysis;Oceans;Education;Urban areas;Problem-solving;STEM;computational thinking;elementary teachers;understandings;beliefs;intentions},
  doi={10.1109/ICITE54466.2022.9759837},
  ISSN={},
  month={Jan},}@INPROCEEDINGS{7904960,
  author={Daungcharone, Kannika},
  booktitle={2017 International Conference on Digital Arts, Media and Technology (ICDAMT)}, 
  title={Enhancement the computational thinking skills via the simulation game}, 
  year={2017},
  volume={},
  number={},
  pages={195-199},
  abstract={The learning style in these day has been changed since the traditional style has been replaced by the modern style of learning processes using new technology such as social media, smart phone or edutainment. Nowadays, simulation game plays an important role in educational ground because its characteristic can enhances the learners' motivation. The paper aims to purpose the novel idea of how to identify appropriate factors which relate to the learner's motivation for supporting the computational thinking skills via simulation game. This is importance because games are considered as efficiency tools in which lecturers can employ to escalate the interest of lessons and to make the learning to be more effective.},
  keywords={Games;Computational modeling;Programming profession;Computers;Object oriented modeling;Engineering profession;Simulation Game;Computational Thinking Skills;Learning Motivation},
  doi={10.1109/ICDAMT.2017.7904960},
  ISSN={},
  month={March},}@INPROCEEDINGS{7044489,
  author={Shell, Duane F. and Hazley, Melissa Patterson and Soh, Leen-Kiat and Dee Miller, L. and Chiriacescu, Vlad and Ingraham, Elizabeth},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={Improving learning of computational thinking using computational creativity exercises in a college CSI computer science course for engineers}, 
  year={2014},
  volume={},
  number={},
  pages={1-7},
  abstract={Promoting computational thinking is a priority in CS education and other STEM and non-STEM disciplines. Our innovative, NSF-funded IC2Think project blends computational and creative thinking. In Spring 2013, we deployed Computational Creativity Exercises (CCE) designed to engage creative competencies (Surrounding, Capturing, Challenging and Broadening) in an introductory CSI course for engineering students. We compared this CCE implementation semester (80 students, 95% completing 3 or 4 CCEs) to the Fall 2013 semester of the same course (55 students) without CCEs. CCE implementation students had significantly higher scores on a CS concepts and skills knowledge test (F(1, 132) = 7.72, p < 01, partial Eta2 = .055; M=7.47 to M=6.13; 13 items) and significantly higher self-efficacy for applying CS knowledge in their field (F(1, 153) = 12.22, p < .01, partial Eta2 = .074; M=70.64 to M=61.47; 100-point scale). CCE implementation students had significantly higher study time (t(1, 136) = 2.08, p = .04; M=3.88 to M=3.29; 7-point scale) and significantly lower lack of regulation, which measures difficulties with studying (t(1, 136) = 2.82, p = .006; M=2.80 to M=3.21; 5-point scale). The addition of computational creativity exercises to CS courses may improve computational thinking and learning of CS knowledge and skills.},
  keywords={Educational institutions;Instruments;Problem-solving;Programming;Reflection;Engineering profession;CSI;Creative Thinking;Computational Thinking;Engineering;Student Learning;Self-Regulation;Engagement;Self-Efficacy},
  doi={10.1109/FIE.2014.7044489},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10261627,
  author={Chen, Jiefei},
  booktitle={2023 5th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={Study on Teaching Programming in Adult Colleges Based on the Cultivation of Computational Thinking}, 
  year={2023},
  volume={},
  number={},
  pages={81-85},
  abstract={Computational thinking is an important concept that is currently receiving widespread attention in the international computing community. Teaching programming is an effective way to develop students' computational thinking. Students in adult colleges and universities face the pressure of study and work, and there is a need to improve their computational thinking skills. In this paper, we design and develop a set of programming activities based on computational thinking development for adult college students, and study the changes in students' computational thinking before and after they participate in the activities. It provides a reference for frontline teachers and related researchers to design programming activities and conduct research in computational thinking.},
  keywords={Education;Programming profession;Faces;computational thinking;programming;activity design},
  doi={10.1109/CSTE59648.2023.00021},
  ISSN={},
  month={April},}@INPROCEEDINGS{10469197,
  author={Lai, Chien-Hung and Hsieh, Cheng-Han},
  booktitle={2023 IEEE 3rd International Conference on Social Sciences and Intelligence Management (SSIM)}, 
  title={Exploring the Impact of the Learning Sequence of Computational Thinking and Programming on Learning Outcomes}, 
  year={2023},
  volume={},
  number={},
  pages={175-179},
  abstract={The primary objective of this research was to investigate effective learning sequences starting with computational thinking, programming, or both. We experimented with and analyzed the learning sequence of students from the Department of Computer Engineering, Information Management, and Mechanical Engineering. The findings indicated that the students of the Department of Computer Engineering possessed prior experiences in programming or computational thinking. Their learning sequences limitedly impacted learning outcomes. Conversely, for the students of the Department of Information Management, learning computational thinking before programming did not result in better learning outcomes, emphasizing the need for coherence in courses. The students of the Department of Mechanical Engineering showed the practical value of computational thinking in non-IT disciplines, particularly in using specialized software such as MATLAB. For students with foundational knowledge, the learning sequence between learning computational thinking and programming was less significant. However, for beginners or those from non-IT backgrounds, effective learning required the coherence and integration of courses. Thus, it is required to maintain cross-course coherence and establish links between computational thinking and programming skills to offer a more in-depth learning experience.},
  keywords={Training;Systematics;Social sciences;Coherence;Programming;Software;Information management;computational thinking;programming;learning sequence;course coherence;interdisciplinary application},
  doi={10.1109/SSIM59263.2023.10469197},
  ISSN={},
  month={Dec},}@ARTICLE{9744486,
  author={Fanchamps, Nardie and Slangen, Lou and Specht, Marcus and Hennissen, Paul},
  journal={IEEE Transactions on Learning Technologies}, 
  title={The Effect on Computational Thinking Using SRA-Programming: Anticipating Changes in a Dynamic Problem Environment}, 
  year={2022},
  volume={15},
  number={2},
  pages={213-222},
  abstract={This article illustrates that the task design and problem selection are of characteristic influence to evoke sense-reason-act programming (SRA) among primary school pupils when programming robots. Research shows that the task design influences the development of computational thinking (CT). The literature provides evidence that the context, the problem space, and the representation of the problem to apply SRA-programming require the programming task to be embedded in a dynamic context in which a programmable robot must use sensory information to anticipate changes in the environment. In order to ascertain whether the problem space and the task design influence the evocation of SRA-thinking, this article uses a research design comparing the differences between two programming conditions (static/dynamic). In these conditions, pupils use Lego EV-3 robots and Mindstorms software to solve programming problems. As a post-measurement, a Lego challenge is applied. In this article, it is shown that the integration of a dynamic task design to solve a programming problem is essential for a deeper understanding of CT skills. Furthermore, when pupils can immediately test the consequences of their program in a dynamic environment and, thus, the learning environment provides an appropriate problem, they gain a deeper understanding of the added value of sensors and will be better able to reason about complex problems. It is found that programming in a dynamic problem environment almost naturally evokes SRA-thinking, as opposed to programming in a static environment. The influence of SRA-programming as demonstrated identifies characteristics of CT.},
  keywords={Programming;Pupils;Programming profession;Robots;Task analysis;Robot sensing systems;Problem-solving;Computational thinking (CT);dynamic environments;robotics;sense-reason-act (SRA)-thinking;tangible output},
  doi={10.1109/TLT.2022.3162895},
  ISSN={1939-1382},
  month={April},}
