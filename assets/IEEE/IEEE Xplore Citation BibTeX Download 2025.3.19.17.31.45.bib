@INPROCEEDINGS{9766703,
  author={Ismail, Redar and Steinbach, Theresa A. and Miller, Craig S.},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={A Guide Towards a Definition of Computational Thinking in K-12}, 
  year={2022},
  volume={},
  number={},
  pages={801-810},
  abstract={Computational thinking (CT) has been described as a set of valuable skills for tackling complex problems. To foster CT among K-12 students, different initiatives have been introduced by governmental and non-governmental entities, and numerous studies have been carried out by researchers to define and integrate CT into school curriculum. However, previous studies has shown little agreement among researchers, governmental and non-governmental sectors about a unified CT definition. These dissensions have introduced challenges in formulating a definition for CT at the K-12 level. The absence of a unified definition may increase the challenges for teachers to teach and integrate CT into school curriculum. To foster CT among K-12 students, we introduce a definition and framework for CT. We evaluated 39 articles and extracted the most common elements used in the literature to frame CT definition and describe its elements. Several studies have discussed, as well as investigated, the significance of conceptualizing and comprehending the interaction and dependency relationships among computational objects. However, our literature review discovered that little attention has been dedicated to the concept of dependency in the CT body of knowledge. Based on the literature review, we define CT as the thought process used for solving problems, and it encompasses the elements of problem decomposition, abstraction, and algorithmic thinking. We conjecture the CT definition is missing the element of dependency. In the context of CT, we define dependency as the knowledge of comprehending the interrelationships between different sections of a decomposed problem.},
  keywords={Computer science;Bibliographies;Conferences;Computational modeling;Engineering education;Computational Thinking (CT);K-12 Education;Dependency;Abstraction;Decomposition;Algorithmic Thinking},
  doi={10.1109/EDUCON52537.2022.9766703},
  ISSN={2165-9567},
  month={March},}@ARTICLE{8131700,
  author={Sieg, Wilfried},
  journal={Logic Journal of the IGPL}, 
  title={The AProS Project: Strategic Thinking & Computational Logic}, 
  year={2007},
  volume={15},
  number={4},
  pages={359-368},
  abstract={The paper discusses tools for teaching logic used in Logic & Proofs, a web-based introduction to modern logic that has been taken by more than 1,300 students since the fall of 2003. The tools include a wide array of interactive learning environments or cognitive mini-tutors; most important among them is the Carnegie Proof Lab. The Proof Lab is a sophisticated interface for constructing natural deduction proofs and is central, as strategically guided discovery of proofs is the distinctive focus of the course. My discussion makes explicit the broader intellectual context, but also the pursuit of pedagogical goals and their experimental examination. The intellectual context includes i) the theoretical background for the proof search algorithm AProS and its use for a dynamic Proof Tutor, and ii) the programmatic expansion of the course to Computational Logic. (I recommend that the reader enter the virtual classroom of Logic & Proofs: the interactive components just cannot be properly reflected in a narrative. It is also very easy to download AProS and observe its ways of searching for proofs.) 1},
  keywords={introduction to logic;strategic thinking;automated proof search;dynamic proof tutor;Carnegie Proof Lab;Open Learning Initiative (OLI);intercalation calculus;natural deduction proof},
  doi={10.1093/jigpal/jzm026},
  ISSN={1368-9894},
  month={Aug},}@INPROCEEDINGS{7739692,
  author={Turchi, Tommaso and Malizia, Alessio},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Fostering computational thinking skills with a tangible blocks programming environment}, 
  year={2016},
  volume={},
  number={},
  pages={232-233},
  abstract={Computational Thinking has recently returned into the limelight as an essential skill to have for both the general public and disciplines outside Computer Science. It encapsulates those thinking skills integral to solving complex problems using a computer, thus widely applicable in our technological society. Several public initiatives such as the Hour of Code successfully introduced it to millions of people of different ages and backgrounds, mostly using Blocks Programming Environments like Scratch that lower the barriers of programming and facilitate learning. In this paper we present our arguments for fostering Computational Thinking skills using a Blocks Programming Environment augmented with a Tangible User Interface, namely by exploiting objects whose interactions with the physical environment are mapped to digital actions performed on the system. Our demonstration includes a working prototype implementing our Tangible Blocks Programming Environment called TAPAS.},
  keywords={Programming environments;Visualization;Programming profession;Encoding;Concrete;Computational Thinking;Tangible User Interface;End-User Programming},
  doi={10.1109/VLHCC.2016.7739692},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{9728803,
  author={Hu, Chih-Chien and Chen, Ming-Hsien and Yuadi, Imam and Chen, Nian-Shing},
  booktitle={2022 24th International Conference on Advanced Communication Technology (ICACT)}, 
  title={The effects of constructing robot-based storytelling system on college students' computational thinking skill and technology comprehension}, 
  year={2022},
  volume={},
  number={},
  pages={496-500},
  abstract={Recent college students have been observed to be motivated and engaged in acquiring information and communication technology (ICT) knowledge and skills with robots and digital media. The purpose of this study is to develop students’ technology comprehension through a learning activity by constructing robot-based storytelling systems. A sample of 15 college students participated in the program. Data collected include the pre-and post-computational thinking tests (CTt) and computational thinking skill (CTs) tests for evaluating their learning effects of technology comprehension (TC) in terms of computational thinking knowledge and skills and their perceptions toward the robot-based storytelling development environment and learning activities. The results show that the learning activities were an effective approach for enhancing the students’ TC as shown in the post-test. The differences between the students’ CT and perceptions were also confirmed. The results revealed that the learning activities with the robot-based storytelling development environment could improve the students’ TC knowledge and skills, and learning perceptions.},
  keywords={Education;Media;Information and communication technology;Robots;Creativity;Technology comprehension;Computational thinking;Robot-based storytelling;Information and communication technology},
  doi={10.23919/ICACT53585.2022.9728803},
  ISSN={1738-9445},
  month={Feb},}@INPROCEEDINGS{10892914,
  author={Dehbozorgi, Nasrin and Nezafati, Maysam and Roopaei, Mehdi},
  booktitle={2024 IEEE Frontiers in Education Conference (FIE)}, 
  title={Integrating Computational Thinking Into the Curricula to Bridge the Skill Gap in Engineering Education}, 
  year={2024},
  volume={},
  number={},
  pages={1-4},
  abstract={This work-in-progress research-to-practice paper presents an intervention on integrating computational thinking modules into a software engineering course. The national consensus on the significance of computational thinking has prompted the expansion of related educational initiatives over the past decade. Since the definition of computational thinking by Wing in 2006, this concept has gained significant attention within the educational community. Particularly this surge of interest has led to extensive research into its conceptual foundations and subsequent integration into educational curricula since 2013. National initiatives have since emerged to incorporate computational thinking into the educational system. Furthermore, as artificial intelligence and computing systems become increasingly integrated into daily life, there is a growing demand from industries for a workforce and graduates adept at critical thinking and problem-solving. Aligned with this national movement, our study presents a two-year institutional initiative, aimed at integrating computational thinking into the software engineering program. The software engineering discipline extensively involves design thinking and problem-solving skills. However, we noticed that these higher-level skills are not imparted early in the program to teach students this method of thinking and approaching problems. To bridge this skill gap, we developed a set of computational thinking modules and integrated them into a gateway course in the software engineering program. Over two years, we implemented this intervention in an introductory-level course and evaluated its impact on students' computational thinking skills by analyzing their responses to a standard Computational Thinking Assessment survey. The results showed significant improvement in most components. These early findings underscore the effectiveness of integrating these computational thinking modules into the gateway courses, regardless of the specific course topic. A notable feature of these modules is their adaptability to diverse engineering courses, suggesting broader applicability across disciplines. Moving forward, our research aims to expand the integration of the computational thinking modules into various courses in other institutes across the nation and analyze their impact on student performance.},
  keywords={Bridges;Surveys;Industries;Logic gates;Problem-solving;Surges;Engineering education;Artificial intelligence;Standards;Software engineering;Computational Thinking;Software Engineering;Engineering Education},
  doi={10.1109/FIE61694.2024.10892914},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10685695,
  author={Xue, Tianyu and He, Shiyan and Guo, Weitong},
  booktitle={2024 International Symposium on Educational Technology (ISET)}, 
  title={Design and implementation of a graphical programming class for computational thinking in elementary schools}, 
  year={2024},
  volume={},
  number={},
  pages={376-380},
  abstract={As the process of artificial intelligence progresses, it is recognized that computational thinking is one of the basic skills for understanding and solving problems and one of the core literacies of the IT discipline. There are various ways to develop students’ computational thinking, and at the primary and secondary school levels, graphical programming classes are an important way to do so. This study establishes a framework for an instructional program aimed at developing students’ computational thinking skills based on elementary school graphic programming classes. Combining curriculum standards, graphic programming standards for youth programming skills, and International Computational Thinking Challenge standards, relevant teaching cases are designed to foster students’ computational thinking and promote the development of computational concepts, computational practices, and computational concepts.},
  keywords={Graphics;Educational technology;Artificial intelligence;Programming profession;Standards;Computational Thinking;Graphical Programming;Teaching},
  doi={10.1109/ISET61814.2024.00081},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{8853613,
  author={Curasma, Ronald Paucar and Jara, Nolan Jara and Curasma, Herminio Paucar and Ornetta, Victor Cruz},
  booktitle={2019 IEEE XXVI International Conference on Electronics, Electrical Engineering and Computing (INTERCON)}, 
  title={Assessment of Computational Thinking in regular basic education: case I.E.T.P. “José Obrero”}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={In regular basic education environments, one of the challenges of Computer and Computing courses or similar is to motivate students, who perceive programming as a difficult task. Arduino board is recognized as a tool to improve programming skills and to facilitate teamwork. In this paper, Computational Thinking is evaluated through concepts, practices and computational perspectives of the activities carried out with the Arduino board by the 5th-grade students of secondary education of the “José Obrero” Parochial Technical Educational Institution in the district of San Mateo from the province of Huarochirí of Lima region.},
  keywords={Education;Programming profession;Tools;Encoding;Computational modeling;Computational thinking;computational dimensions;Arduino;programming;coding;regular basic education},
  doi={10.1109/INTERCON.2019.8853613},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{5881653,
  author={Zhou, Xiongjun},
  booktitle={2011 International Conference on E-Business and E-Government (ICEE)}, 
  title={The research on online independent learning model based on computational thinking}, 
  year={2011},
  volume={},
  number={},
  pages={1-5},
  abstract={The online independent learning is one of the topics, which is currently focused by educational technology. Computational thinking is another important concept that international computer field widely concerned on. With the feature of online learning model, this paper builds Online Independent Learning Model Based on Computational Thinking (OILMCT). Comparing with the traditional teaching model, the OILMCT makes a great improvement in developing learners' self-building knowledge and the capability of innovative thinking. Not only improve the learning efficiency, but also make learners' computational thinking capability getting progress.},
  keywords={Computational modeling;Education;Mathematical model;Computers;Computer science;Learning systems;Computational efficiency;computational thinking;online environment;independent learning},
  doi={10.1109/ICEBEG.2011.5881653},
  ISSN={},
  month={May},}@INPROCEEDINGS{8995066,
  author={Gerosa, Anaclara and Koleszar, Víctor and Gómez-Sena, Leonel and Tejera, Gonzalo and Carboni, Alejandra},
  booktitle={2019 XIV Latin American Conference on Learning Technologies (LACLO)}, 
  title={Educational Robotics and Computational Thinking Development in Preschool}, 
  year={2019},
  volume={},
  number={},
  pages={226-230},
  abstract={Programming robots playing with the environment is an ongoing research project aimed at developing a robot and intervention program capable of enhancing young children's cognitive abilities and computational thinking skills. Using a robot sensitive to color and distance, children are able to use everyday objects in order to interact with it and program its movements. An eleven session intervention program using this robot was designed with the objective of creating playful learning instances were children would practice abilities associated with what is generally thought of as computational thinking. We'll assess children's computational thinking, fluid intelligence, working memory, planning, sequencing, number recognition and magnitude comparison, vocabulary, mental rotation, inhibitory control and cognitive flexibility to test for cognitive effects of the intervention. An active control in which children interact with the robot by remotely controlling it was used.},
  keywords={Robots;Robot sensing systems;Color;Computational modeling;Robot kinematics;Motors;Silicon;computational thinking;educational robotics;early childhood},
  doi={10.1109/LACLO49268.2019.00046},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8494172,
  author={Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={Fractal Geometry: Enhancing Computational Thinking with MIT Scratch}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={Recent developments in pedagogy have focused upon computational thinking. Computational thinking provides a way to solve the problem and it is a key practice of science education. The importance of computational thinking is rarely found in K-12 education. Computational thinking is a an important skill everyone needs and it is correlated with many other concepts. These factors have made the development of new tools and syllabus. In this paper, we aim to show the experiments of fractal geometry using MIT Scratch. These computational exercises facilitate to learn many of computational thinking skills that are very important for the people in the near future. Based on our experience with students, we claim that the concept of fractal and its implementation in MIT Scratch is the best practices to improve computational thinking in K-12 school level students.},
  keywords={Fractals;Programming profession;Education;Visualization;Games;Computational thinking;fractal geometry;Scratch;K-12 education;block based programming;21st century learning skills},
  doi={10.1109/ICCCNT.2018.8494172},
  ISSN={},
  month={July},}@INPROCEEDINGS{8560947,
  author={Jung, Andrew and Park, Jinsook and Ahn, Andrew and Yun, Mira},
  booktitle={2017 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={CS for ALL: Introducing Computational Thinking with Hands-On Experience in College}, 
  year={2017},
  volume={},
  number={},
  pages={1073-1078},
  abstract={CS for ALL is a new education initiative launched in 2016 to empower a generation of American students with the computer science skills they need to thrive in a digital economy. In order to keep up with trends in the growing technology-driven world, students should have the ability to analyze and consider the consequences of computing problems critically. However, introducing CS and computational thinking skills to the first year students in college is a difficult task because the nature of the subject tends to be dry and conceptual. Thus, we introduce a computer science course that helps all undergraduate students to prepare for digital life as well as enhance their critical thinking skills through hands-on learning experiences. The course contents introduce the general concept of computer science such as computing system, basic networking, algorithms and programming with Scratch and mBot robot exercises. Our student feedback shows a high level of enthusiasm and engagement among the students. The strong hands-on learning nature of the course helped our students to have more engaging and interactive classroom experiences.},
  keywords={Computer Science Education;Computational Thinking;Hands-on;Robot programming},
  doi={10.1109/CSCI.2017.187},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9272097,
  author={Nunez, Nicolas A. and Cornejo-Meza, Giuliana and Sánchez, Sandro A.},
  booktitle={2020 IEEE ANDESCON}, 
  title={Comparing computational thinking skills of engineering students in urban and rural areas of Peru}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={The present study focuses on comparing the achievement levels of computational thinking skills in first-year engineering students at two Peruvian universities, one located in an area with a high human development index (Lima) and the other in a more vulnerable area (Amazonas). The study is based on a computational thinking competence assessment model carried out with 112 students who were given challenges and problems. The results show that: (a) the achievement levels of computational thinking competences differ significantly between the Lima group and the Amazonas group, (b) the highest levels of competence achievement are associated with students who had some level of previous instruction in secondary education, and (c) the differences in the achievement of computational thinking skills according to student gender are not significant.},
  keywords={Education;Analysis of variance;Programming profession;Conferences;Training;Standards;Engineering students;computational thinking;education in engineering;Peru;Latin America;vulnerable environments},
  doi={10.1109/ANDESCON50619.2020.9272097},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9603471,
  author={Wang, Yintong and Li, Shuo},
  booktitle={2021 International Conference on Education, Information Management and Service Science (EIMSS)}, 
  title={Research on group-based learning teaching mode to computational thinking ability development based on Blackboard system}, 
  year={2021},
  volume={},
  number={},
  pages={58-61},
  abstract={Under the background of modern computer science education, the development of students' computational thinking ability and programming problem solving skills is the most important work. This paper researches on group-based learning teaching mode to computational thinking ability development based on Blackboard system, which explores a suitable learning way in terms of learner cognitive engagement and constructivist perspective using Blackboard system, and emphasizes the student's subject position in learning and the teacher's dominant position in teaching. It can also enhance the interaction between the teacher and the student, a positive teacher-student relationship facilitates affective learning, thus developing the educational process and making it more comfortable. This paper discusses the development of computational thinking ability and Blackboard system, and the current situation of the computer teaching. Then put forward the key elements of course content selection in computer science education, and designed a group-based learning teaching mode to computational thinking ability development based on Blackboard system.},
  keywords={Computational modeling;Education;Collaboration;Computer science education;Information management;Problem-solving;Programming profession;computational thinking;group-based learning teaching mode;computer science education},
  doi={10.1109/EIMSS53851.2021.00021},
  ISSN={},
  month={July},}@INPROCEEDINGS{8995162,
  author={Muñoz del Castillo, Armando and Muñoz, Mario A. and Acosta Huertas, Lydia Cruz and Herrera, Edgar and Jimenez Toledo, Javier and Ramos, Deixy Ximena},
  booktitle={2019 XIV Latin American Conference on Learning Technologies (LACLO)}, 
  title={Developing a Teacher Training Curriculum Including Computational Thinking Skills: Early Advances on a Study Focused on Colombia}, 
  year={2019},
  volume={},
  number={},
  pages={8-11},
  abstract={During training at the Complementary Formation Program (CFP), Colombian primary school teachers do not acquire Computational Thinking (CT) skills, which are considered fundamental for the knowledge economies of the 21st century. In this paper, we describe the early stages of a project aiming to reform the CFP curriculum, such that CT skills becomes an integral part. As a first step, we carried-out four introductory workshops with 64 first-and third-semester CFP students and then surveyed them to gather their perceptions on CT. The results show that the students have a limited understanding of CT and its associated skills, but they recognize their importance. Moreover, they agree that primary school should be the starting point to develop them. The project will continue gathering information from current CFP teachers, current primary school teachers, and university professors who are experts in curriculum development, to develop the curricular proposal.},
  keywords={Computational Thinking;Curriculum design;Teacher training},
  doi={10.1109/LACLO49268.2019.00012},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{6756334,
  author={Philip, Mintu and Renumol, V. G. and Gopeekrishnan, R},
  booktitle={2013 IEEE International Conference in MOOC, Innovation and Technology in Education (MITE)}, 
  title={A pragmatic approach to develop computational thinking skills in novices in Computing Education}, 
  year={2013},
  volume={},
  number={},
  pages={199-204},
  abstract={Fundamental skills acquired by undergraduate students during their academic, play a crucial role in their career. One such skill is computational thinking (CT), which will help to solve problems algorithmically using computers. Computational thinking will improve their problem solving skills in a non-conventional manner as this leads the student to think in multiple paths to reach the solution. However, it is a challenge in Computing Education to develop student's ability to solve problems in an algorithmic way. The aim of this paper is to introduce a potential and pragmatic approach to develop computational thinking skills in novices.},
  keywords={Programming profession;Computers;Computational modeling;Educational institutions;Problem-solving;computational thinking;algorithm;problem solving;abstraction;computing education},
  doi={10.1109/MITE.2013.6756334},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7369019,
  author={Bauer, Aaron and Butler, Eric and Popović, Zoran},
  booktitle={2015 IEEE Blocks and Beyond Workshop (Blocks and Beyond)}, 
  title={Approaches for teaching computational thinking strategies in an educational game: A position paper}, 
  year={2015},
  volume={},
  number={},
  pages={121-123},
  abstract={Computer science is expanding into K12 education and numerous educational games and systems have been created to teach programming skills, including many block-based programming environments. Teaching computational thinking has received particular attention, and more research is needed on using educational games to directly teach computational thinking skills. We propose to investigate this using Dragon Architect, an educational block-based programming game we are developing. Specifically, we wish to study ways of directly teaching computational thinking strategies such as divide and conquer in an educational game, as well as ways to evaluate our approaches.},
  keywords={Games;Programming profession;Programming environments;Computer science education;Problem-solving;block-based programming;game-based learning;computational thinking;CS education},
  doi={10.1109/BLOCKS.2015.7369019},
  ISSN={},
  month={Oct},}@ARTICLE{6813968,
  author={Repenning, Alexander and Webb, David C. and Brand, Catharine and Gluck, Fred and Grover, Ryan and Miller, Susan and Nickerson, Hilarie and Song, Muyang},
  journal={IEEE Computer Graphics and Applications}, 
  title={Beyond Minecraft: Facilitating Computational Thinking through Modeling and Programming in 3D}, 
  year={2014},
  volume={34},
  number={3},
  pages={68-71},
  abstract={Visual programming in 3D sounds much more appealing than programming in 2D, but what are its benefits? Here, University of Colorado Boulder educators discuss the differences between 2D and 3D regarding three concepts connecting computer graphics to computer science education: ownership, spatial thinking, and syntonicity.},
  keywords={Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;conversational programming;Three-dimensional displays;Programming profession;Games;Solid modeling;Computational modeling;Educational institutions;graphics;3D programming;AgentSheets;AgentCubes;computational thinking;computer science education;computer graphics;3D design;computer programming;spatial thinking;syntonicity},
  doi={10.1109/MCG.2014.46},
  ISSN={1558-1756},
  month={May},}@INPROCEEDINGS{8567181,
  author={Wu, Sheng-Yi},
  booktitle={2018 1st International Cognitive Cities Conference (IC3)}, 
  title={The Development and Challenges of Computational Thinking Board Games}, 
  year={2018},
  volume={},
  number={},
  pages={129-131},
  abstract={The promotion of computational thinking education has become a worldwide trend. To cultivate the computational thinking ability of children at young age, many computational thinking board games have appeared recently. This article introduces five computational thinking board games, including Robot Turtles, King of Pirates, Doggy Code, ROBOT WARS Coding Board Game, and Code master, and then to analyze its characteristics respectively. Additionally, this article also points out the current limitations and challenges of computational thinking board games. We hope more schools or operators will join the development of computational thinking education in the future.},
  keywords={Games;Education;Programming profession;Robots;Encoding;computational thinking, board game, coding, game-based learning},
  doi={10.1109/IC3.2018.00-45},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{6778575,
  author={Carvalho, Tainã and Andrade, Daiane and Silveira, Jayne and Auler, Victor and Cavalheiro, Simone and Aguiar, Marilton and Foss, Luciana and Pernas, Ana and Reiser, Renata},
  booktitle={2013 2nd Workshop-School on Theoretical Computer Science}, 
  title={Discussing the Challenges Related to Deployment of Computational Thinking in Brazilian Basic Education}, 
  year={2013},
  volume={},
  number={},
  pages={111-115},
  abstract={Computational thinking aims to employ Computer Science foundations to solve problems in different knowledge areas. This paper describes projects related to computational thinking and starts a discussion on the challenges for implementing computational thinking in primary and secondary education in Brazil.},
  keywords={Educational institutions;Computer science;Games;Proposals;Computers;Google;Computational thinking;Basic education;Informatics in education;Computer-aided learning;Constructive thinking},
  doi={10.1109/WEIT.2013.27},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10361088,
  author={Zhang, Jiaying and Zhang, Yi and Lin, Yuru},
  booktitle={2023 International Symposium on Educational Technology (ISET)}, 
  title={The Impact of stem Courses on Students’ Computational Thinking: Mediation based on problem solving ability and stem attitude}, 
  year={2023},
  volume={},
  number={},
  pages={74-78},
  abstract={Computational thinking is advocated as a skill that everyone should possess, and stem content and background can be conducive to the learning of computational thinking. This study constructed a theoretical model of the impact of stem courses on students’ computational thinking, and measured the mediating effects of problem solving skills and stem attitudes on stem courses and students’ computational thinking. The study included a questionnaire of 1870 secondary school students and a descriptive, correlational and mediating analysis. The results show that stem courses can predict students’ computational thinking through students’ problem solving ability and students’ attitude towards stem. The results of this study have a positive reference value for discussing the factors affecting students’ computational thinking, implementing stem course education, improving students’ problem-solving ability and enhancing students’ attitude towards stem.},
  keywords={Computational modeling;Educational technology;Extensibility;Problem-solving;Mediation;Computational thinking;stem course;Problem Solving Ability;stem Attitude},
  doi={10.1109/ISET58841.2023.00023},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{9477758,
  author={Wang, Xuemei and Zou, Xuelan and Yin, Weifeng and Li, Qingsheng and Zhang, Li and Hong, Liang},
  booktitle={2021 IEEE 3rd International Conference on Computer Science and Educational Informatization (CSEI)}, 
  title={Research and Application of Computational Thinking on Python Teaching}, 
  year={2021},
  volume={},
  number={},
  pages={311-314},
  abstract={With the development of science and technology, the interdisciplinary knowledge penetration has become an important trend in the development of science and technology. Computational thinking is expanding from the field of computer science to other disciplines. The computational thinking is the focus of the information technology in science and engineering. Python teaching is widely used in programming courses in colleges and universities. The combination of theory and practice can stimulate students' initiative of independent innovation by teaching practice. It can effectively improve the effect and quality of computer thinking training.},
  keywords={Training;Technological innovation;Systematics;Electronic learning;Education;Market research;Online services;computational thinking;case teaching;python programming},
  doi={10.1109/CSEI51395.2021.9477758},
  ISSN={},
  month={June},}@INPROCEEDINGS{9028503,
  author={Shoaib, Huma and Cardella, Monica and Madamanchi, Aasakiran and Umulis, David},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={An Investigation of Undergraduates’ Computational Thinking in a Sophomore-Level Biomedical Engineering Course}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={This research study presents our work focused on studying the development of introductory computational thinking in undergraduate biomedical engineering students. In response to the growing computational intensity of the healthcare industry, biomedical engineering (BME) undergraduate education is starting to emphasize computation and computational thinking. Computational thinking is a way of thinking that uses concepts and methodologies of computing to solve problems in interdisciplinary and multidisciplinary subjects. In broader terms, computational thinking is not only associated with using computational tools but also with the thought process of solving a problem by data representation, problem decomposition, and algorithm design. Despite being so important, there is little research work or information available on the development of computational thinking in BME undergraduate students. Our research focuses on how BME undergraduate students develop computational thinking skills while performing group activities related to problem-solving. In order to conduct this study, we incorporate a teaching methodology that prompts computational thinking in a thermodynamics course being taught at a public mid-western university to approximately 120 sophomore students. We observe classroom activities involving analytical problem solving followed by pseudo code generation for computational coding. In order to investigate computational thinking, we collect classroom observations of small groups of students as they come up with a solution to an analytical problem with each other. We complement the observation notes of the classroom activities with follow up semi structured interviews with individual students from five groups. Thematic analysis of the student interviews is used in order to analyze student responses towards the incorporation of computation intensive teaching methodology. This Work in Progress helps us expand our understanding of computational thinking development and the challenges involved in performing computational thinking activity in BME undergraduate students.},
  keywords={Mathematical model;Thermodynamics;Interviews;Problem-solving;Computational modeling;Analytical models;Testing;thermodynamics;computational thinking},
  doi={10.1109/FIE43999.2019.9028503},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9534576,
  author={Xiaohong, Cong and Jie, Liu and Zhibin, Miao and Li, Xu},
  booktitle={2021 2nd International Conference on Artificial Intelligence and Education (ICAIE)}, 
  title={Teaching research on the cultivation of computational thinking ability by using information technology}, 
  year={2021},
  volume={},
  number={},
  pages={564-567},
  abstract={Computational thinking ability is a very important, and it is a basic necessary skill for future talents. This paper describes the shortcomings of the current education of cultivating students’ computational thinking ability, analyzes the needs of cultivating students’ innovative ways of computational thinking in the information age, and expounds the necessity of innovative education and teaching. In this paper, the project driven teaching mode and the teaching method of computational thinking cultivation are proposed. The Small Private Online Course (SPOC) teaching method is used in the teaching practice, which is a kind of information technology method. Combined with project driven and SPOC teaching methods, the students' computational thinking ability is further cultivated. In the teaching practice, the information technology and project driven learning are made full use, which are two key factors in the information age, so the students’ computational thinking ability has been greatly improved, and the teaching effect is obvious.},
  keywords={Training;Technological innovation;Education;Employment;Information age;Artificial intelligence;information technology;computational thinking;Innovation education;Project driven;Teaching practice},
  doi={10.1109/ICAIE53562.2021.00125},
  ISSN={},
  month={June},}@INPROCEEDINGS{8467140,
  author={Johnson, Charles A. N. and Bin Daud, Moh'd Fadzil and Arsat, Mahyuddin Bin and Bt. Wan Hussin, Wan Nazdah and Egba, Ernest Ituma},
  booktitle={2017 7th World Engineering Education Forum (WEEF)}, 
  title={Enhancing Synergy Among Engineering Educators through Computational Thinking}, 
  year={2017},
  volume={},
  number={},
  pages={636-641},
  abstract={Observations have shown the need of adequate collaboration among the engineering educators for effective achievement of its goals. Nevertheless, there have been reports of the inadequate relationship among engineering educators. Consequently, it is vital to develop strategies to boost the synergy among the parties. Computational Thinking (CT) could be a dependable approach. This paper presents ways of ensuring synergy among engineering educators through computational thinking. A questionnaire survey that sought information from the respondents on the ways computational thinking: promotes thinking abilities, reduces personal clashes, and improves decision-making process among the engineering educators was administered to 400 respondents. 348 survey answers were returned, found reliable and used in the data analysis. The analysis revealed that computational thinking plays vital roles in the repositioning of engineering education for solving of novel problems, assurance of mutual respect among educators, and intensive research for renown engineering education with relative contribution index above 0.8. The paper recommends the development of a computational thinking based comprehensive engineering educators' synergy framework as a suggestion for future research.},
  keywords={Engineering education;Decision making;Teamwork;Instruments;Computational modeling;Solid modeling;synergy;engineering educators;computational thinking;higher education;engineering discipline},
  doi={10.1109/WEEF.2017.8467140},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{8308511,
  author={Xiao, Min and Yu, Xiaohua},
  booktitle={2017 International Conference of Educational Innovation through Technology (EITT)}, 
  title={A Model of Cultivating Computational Thinking Based on Visual Programming}, 
  year={2017},
  volume={},
  number={},
  pages={75-80},
  abstract={The traditional information technology course focuses on the learning of programming tools and ignores the development of students' Computational Thinking. The emergence of visual programming tools provides a new opportunity for the training of Computational Thinking. On the basis of studying the limitations of thinking training in the traditional information technology class and the advantages of visual programming in computational thinking, this paper proposes a computational thinking training model based on visual programming. The model based on project adopt the combination of teaching plan and learning plan to design teaching and cultivate Computational Thinking. Applying this model to the actual teaching process by designing a teaching case based on the visual programming tool App Inventor, the experimental results show that the Computational Thinking of students in this model is improved in formalization and modeling. Through proposing this model and verifying its validity, we can provide the feasibility and research ideas for further studies by using visual programming to cultivate students' Computational Thinking.},
  keywords={Visualization;Computational modeling;Tools;Training;Programming profession;Computer Thinking;Visual Programming;Projectbased Learning},
  doi={10.1109/EITT.2017.26},
  ISSN={},
  month={Dec},}
