@INPROCEEDINGS{5169480,
  author={Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng},
  booktitle={2009 International Conference on Education Technology and Computer}, 
  title={Discussion of Ability Cultivation of Computational Thinking in Course Teaching}, 
  year={2009},
  volume={},
  number={},
  pages={197-200},
  abstract={Computational thinking is taken for the fundamental skills for everyone, not just computer scientist, to learn and use. It remains to be explored in many aspects how to understand the essence of computational thinking and how cultivate the computational thinking ability of students. In the view of course teaching of computer science, this paper discusses the perception of the essence of computational thinking and presents a method for the cultivation of the computational thinking ability by using courses as carrier, and a case study of the course Data Structures and Algorithms.},
  keywords={Computer science;Pervasive computing;Concurrent computing;Embedded computing;Data structures;Computer vision;Educational technology;Humans;Computer science education;Printing machinery;Computational thinking;methodology;course teaching;data structure and algorithm},
  doi={10.1109/ICETC.2009.16},
  ISSN={2155-1812},
  month={April},}@INPROCEEDINGS{7557641,
  author={Chang, Chih-Kai},
  booktitle={2016 5th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Using Computational Thinking Patterns to Scaffold Program Design in Introductory Programming Course}, 
  year={2016},
  volume={},
  number={},
  pages={397-400},
  abstract={Visual programming languages (VPLs), such as Scratch and StarLogo TNG, can make computer science education more accessible to everyone. Current researches in the study of using VPLs for educational purposes primarily focus on understanding motivational benefits and computational thinking gains. All these educational VPLs claim to scaffold students learning computational thinking concepts. Although the evaluations show that students may exhibit more enthusiasm, it is not clear what computational thinking concepts are actually learned by students. In this paper, we attempt to develop a visual programs recognition tool for student-created StarLogo TNG simulations which representing the computational thinking concepts implemented by the students. Through collecting student's created projects over time, this visual programs recognition tool can possibly indicate the patterns of computational thinking in science simulations created by StarLogo TNG.},
  keywords={Computational modeling;Programming profession;Visualization;Ice;Computers;Syntactics;Visual programming languages;computer science education;computational thinking;StarLogo TNG},
  doi={10.1109/IIAI-AAI.2016.27},
  ISSN={},
  month={July},}@INPROCEEDINGS{8693273,
  author={Chang, Chih-Kai and Tsai, Yu-Tzu},
  booktitle={2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Pair-Programming Curriculum Development of Motion-Based Game for Enhancing Computational Thinking Skills}, 
  year={2018},
  volume={},
  number={},
  pages={284-287},
  abstract={Some curriculum of making computer games were developed to engage students in digital game-making activities so as to enhance their computational thinking skills during the last few years. The findings of those studies are quite positive, especially concerning the promotion of computational thinking skills. However, many students seem to face difficulties in the processes of the game development, such as debugging, applying mathematics, or physics subjects. Additionally, students often have solved the problems and understood concepts, mainly math formulas and physics concepts, alone while creating their games. This study presents an innovative curriculum design that suggests two students playing different role to make motion-based touchless games (i.e., games that are based on natural user interaction technologies, like the Microsoft Kinect camera or Leap Motion). Based on the requirements of the innovative curriculum and interaction technologies, students can naturally fulfill the ideal of pair programming and get various benefits from each other.},
  keywords={Games;Programming;Tools;Face;Cameras;Collaboration;Task analysis;computational thinking;learning by making games;natural user interaction;Kinect;pair programming},
  doi={10.1109/IIAI-AAI.2018.00061},
  ISSN={},
  month={July},}@ARTICLE{10530940,
  author={Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati and Chippa, Divyaansh},
  journal={IEEE Transactions on Education}, 
  title={Developing Future Computational Thinking in Foundational CS Education: A Case Study From a Liberal Education University in India}, 
  year={2024},
  volume={67},
  number={6},
  pages={944-953},
  abstract={Contribution: This article proposes a new theoretical model with a goal to develop future human computational thinking (CT) in foundational computer science (CS) education. The model blends six critical types of thinking, i.e., logical thinking, systems thinking, sustainable thinking, strategic thinking, creative thinking, and responsible thinking into the design of a first-year undergraduate programming course. The study describes a creative blended pedagogy that embeds the proposed model into the course plan.Background: The emergence of artificial intelligent systems such as large language models from a knowledge provider perspective, coupled with a gradual change in post-pandemic outlook of education challenge the relevance and raises concerns about the future of education. The 21st-century human CT requirements, viz., learning to code (skill) and thinking computationally (competency), will be inadequate in the future. Moreover, there is substantial evidence which shows that most introductory programming courses fail to integrate critical elements like ethics and responsibility as part of the course.Intended Outcomes: The authors anticipate experiential learning models such as this has immense potential to future-proof CS education, as well as make future software engineers responsible citizens.Application Design: The proposed model blends six types of thinking into the design and activities of the course. The underlying theoretical basis of these activities revolve around three key principles: 1) experiential learning; 2) self-reflection; and 3) peer learning.Findings: This case study from a liberal educational institution in India qualitatively shows evidence of students developing six critical elements of thinking that shapes their future CT ability.},
  keywords={Education;Sustainable development;Computational modeling;Systems thinking;Programming profession;Software systems;Green products;21st-century skills;computer science (CS);creative pedagogy;foundational education;future thinking},
  doi={10.1109/TE.2024.3394060},
  ISSN={1557-9638},
  month={Dec},}@INPROCEEDINGS{7193021,
  author={Se, Shriya and Ashwini B and Chandran, Archana and Soman K.P},
  booktitle={2015 International Conference on Innovations in Information, Embedded and Communication Systems (ICIIECS)}, 
  title={Computational thinking leads to computational learning: Flipped class room experiments in linear algebra}, 
  year={2015},
  volume={},
  number={},
  pages={1-6},
  abstract={The latest concept evolving in pedagogy is flipped class room where class room is utilized for active learning by students with their peers and faculty. This necessitates development of new syllabus and pedagogy for each subject for class room activities. This paper attempt to propose spreadsheet based experiments in linear algebra that can be used to learn many abstract concepts that are very important for mastering many engineering disciplines. There is vast amount of evidence showing that the computational experiments support active learning and develop exploratory and inventive skill of students.},
  keywords={Eigenvalues and eigenfunctions;Matrix decomposition;Conferences;Technological innovation;Communication systems;Singular value decomposition;Flipped class room computational thinking;Linear algebra;Spread sheet},
  doi={10.1109/ICIIECS.2015.7193021},
  ISSN={},
  month={March},}@INPROCEEDINGS{10260990,
  author={Geremias, Matheus Soppa and Dutra, Taynara Cerigueli and Gasparini, Isabela and Maschio, Eleandro},
  booktitle={2023 IEEE International Conference on Advanced Learning Technologies (ICALT)}, 
  title={An Educational Game to Promote the Development of Computational Thinking in Children Both Neurotypical and with Intellectual Disabilities}, 
  year={2023},
  volume={},
  number={},
  pages={105-107},
  abstract={Computational Thinking (CT) is a way to structure thinking to solve problems, which develops cognitive skills. Educational Digital Games (EDG) are a potential tool to work with CT, stimulating the student's interest and learning. Still, to make these games playable by children with Intellectual disabilities (ID), it is necessary to have adaptations suitable to their educational needs. Therefore, this paper presents the development and evaluation of the EDG “Pensar e Vestir” (PeV). This game addresses a daily life activity, the process of choosing clothes and the act of wearing them, and aims to promote the development of CT in children both neurotypical and with ID. The development process was supported by ID, Education, and Specialized Education Treatment specialists based on accessibility guidelines. In the end, there were two evaluations, firstly with the specialists and then with Computation students, to validate the functional and technical requirements. Currently, the game is in evaluation by its target audience.},
  keywords={Technical requirements;Computer science;Heat treatment;Design methodology;Education;Games;Pattern recognition;computational thinking;educational digital games;intellectual disability},
  doi={10.1109/ICALT58122.2023.00036},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{8970131,
  author={Araújo, Cristiana and Lima, Lázaro V O and Henriques, Pedro Rangel},
  booktitle={2019 International Symposium on Computers in Education (SIIE)}, 
  title={An Ontology based approach to teach Computational Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={This paper is focused on the teaching/learning process of Computational Thinking at primary and secondary schools. It is generally accepted that Programming is a complex task that requires a long learning process. Theoretical knowledge about fundamentals on algorithms and data structures, as well as, on programming languages are required but are not enough; practicing a lot is also necessary. However, teaching Computer Programming is a hard job, most of the times unsuccessful. To overcome all the difficulties, felt by teachers and students, an increasingly bigger community of researchers in Computer Science is defending the importance of teaching Computational Thinking to young students to train them, since very earlier, in logic and abstract reasoning for problem solving. Our starting point to approach this topic relies on the use of an Ontology (OntoCnE) that describes in detail the concepts “Computational Thinking” and “Programming”, and maps those concepts to different education levels, starting with the first year. We believe that a person just acquires a new way of thinking, or a new way of behaving, if he is trained with the appropriate learning resources. So a main investment to educate people in Computational Thinking is on the choice/creation of those convenient resources. In particular we intended to investigate the impact of Augmented Reality in the usefulness of the referred resources. In that direction we will also discuss the development of a Web Platform to help on collecting and classifying (according to the referred ontology) learning resources to be used by teachers in computing classes. On the other hand, the platform will help on the retrieval, from that repository, of the most adequate resources to teach a specific subject to a specific level.},
  keywords={computational thinking;programming;learning resource;teacher support tools;ontology},
  doi={10.1109/SIIE48397.2019.8970131},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{6028861,
  author={Zhang, Chunying and Chen, Xiao and Li, JianJing},
  booktitle={2011 6th International Conference on Computer Science & Education (ICCSE)}, 
  title={Research of VB programming teaching mode based on the core of computational thinking ability training}, 
  year={2011},
  volume={},
  number={},
  pages={1260-1263},
  abstract={In this paper, the existing problems and teaching characteristics of VB programming are first analyzed. Then the specific measures to reform the teaching and examination modes are proposed in accordance with the requirements of computational thinking ability training. After that, how to train the students' “computational thinking” in the VB program curriculum is elaborated on, in the hope of enabling the students to analyze and solve problems and to innovate with computers.},
  keywords={Programming profession;Computers;Educational institutions;Visual BASIC;Training;computational thinking;computational thinking ability;VB programming},
  doi={10.1109/ICCSE.2011.6028861},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{10125117,
  author={Sattar, Farha and Nawaz, Muhammad},
  booktitle={2023 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Developing Computational Thinking in STEM Education with Drones}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={Recent trends in Science, Technology, Engineering, and Mathematics (STEM) education are focused on developing problem-solving skills and computational thinking and empowering students with the STEM discipline's knowledge to solve real-world problems. STEM incorporates an interdisciplinary approach that includes inquiry, analysis, critical thinking, practical experimentation, and cooperative problem-solving. Technological advancements are offering new ways to integrate new tools such as drones, robotics and gaming in teaching and learning practices and modify the pedagogical approaches that are more appealing and engaging. This paper presents an innovative pedagogical approach and practice that integrate drone technology and block-based programming to foster students' computation thinking in a STEM context. The block-based visual programming languages provide an interactive environment to connect the blocks and write programs. The study was conducted in six Australian schools. Students were assigned projects to automate drones using the DroneBlocks app and make programs to fly the drone in different geometrical patterns; straight line, arch, rectangle, triangles and zig-zag and integrate the various manoeuvres; bounce, 8D flips, and throw & go along flight paths. Students' computational thinking development was examined with an emphasis on their performance in formulating and problem-solving. Results have shown that integrated drone and programming pedagogy contributed significantly to students' learning of developing computational thinking for problem-solving and decomposing a problem into smaller parts in a sequence that includes mathematical algorithms to write programs.},
  keywords={Visualization;Writing;Encoding;Pattern recognition;Problem-solving;Task analysis;Programming profession;Drone Technology;Coding;Computational Thinking;Block-based Programming;Tello Edu Drones},
  doi={10.1109/EDUCON54358.2023.10125117},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{9678854,
  author={Ng, Andrew Keong and Mahkeswaran, R},
  booktitle={2021 IEEE International Conference on Engineering, Technology & Education (TALE)}, 
  title={Fostering Computational Thinking and Systems Thinking through Aquaponics Capstone Projects}, 
  year={2021},
  volume={},
  number={},
  pages={1039-1044},
  abstract={In today's world of growing complexity and interconnectedness, computational thinking (CT) and systems thinking (ST) are imperative for everyone to solve complex problems, create advanced solutions, and innovate cutting-edge technologies and systems. Traditional teaching approaches for CT and ST offer limited avenues for applying the knowledge and skills learned in class. This paper presents and discusses the design and development of intelligent aquaponics capstone projects to foster CT and ST in undergraduate students. Specifically, students designed and built an automated aquaponics system with internet of things for real-time remote monitoring and control. Aquaculture and hydroponics subsystems, hardware and software components, communication networks, and data acquisition and analysis of fish and plant growth were integrated and tested, with high yield and quality of fish and vegetables. Attributable to the multidisciplinary and multifaceted high-tech aquaponics system, students can broaden and deepen their theoretical understanding and practical experience of CT and ST.},
  keywords={Education;Writing;Fish;Real-time systems;Software;Reflection;Systems thinking;computational thinking;systems thinking;aquaponics;urban farming technology;capstone project},
  doi={10.1109/TALE52509.2021.9678854},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9694003,
  author={Jin, Yunbo and Sun, Junmei and Ma, Hongliang and Wang, Xiaohong},
  booktitle={2021 Tenth International Conference of Educational Innovation through Technology (EITT)}, 
  title={The impact of different types of scaffolding in project-based learning on girls' computational thinking skills and self-efficacy}, 
  year={2021},
  volume={},
  number={},
  pages={362-366},
  abstract={Gender differences in computational thinking (CT) among students are obvious, with boys ‘CT being significantly higher than girls’. Therefore, how to effectively improve girls' CT has become a serious concern. This study integrated two types of project-based learning (PBL) into a Scratch programming course, one with extensive teacher-supported scaffolding and the other with limited teacher-supported scaffolding. To examine their impact on girls' CT skills and self-efficacy, this study applied mixed research methods, conducted a pretest-posttest control group experiment, and analyzed the quantitative and qualitative data collected from 21 grade-3 girls in a primary school. It was found that the extensive teacher-supported scaffolding of PBL in a Scratch programming course is more effective in promoting the CT skills and self-efficacy than limited teacher-supported scaffolding of PBL. These findings have some implications for the effective PBL practice and related teacher professional development.},
  keywords={Technological innovation;Programming profession;computational thinking;project-based learning;scaffolding;girls},
  doi={10.1109/EITT53287.2021.00077},
  ISSN={2166-0549},
  month={Dec},}@INPROCEEDINGS{10496968,
  author={Zhang, Wei and Song, Lingling and Zeng, Xinyao and Li, Panpan},
  booktitle={2023 5th International Workshop on Artificial Intelligence and Education (WAIE)}, 
  title={Exploring the Relationship Between Computational Thinking and Personality Traits}, 
  year={2023},
  volume={},
  number={},
  pages={101-105},
  abstract={To better understand the impact of students' personality on their computational thinking (CT), this paper develops a CT evaluation tool for college students. Correlation analysis is used to explore the relationship between students' computational thinking skills (CTS) and their five personality traits: extraversion, agreeableness, conscientiousness, neuroticism, and openness. 219 college students completed the CT Assessment Test and the Big Five Personality Inventory. The results showed that there were statistically significant correlations between CTS and extraversion, conscientiousness, and openness, among which openness had the greatest impact on CTS, and extraversion and conscientiousness had moderate effects on CTS. These results are consistent with the conclusions of most related literatures, confirming the existence of non-cognitive influencing factors of CT. Based on these findings, this paper recommends that teachers can pay attention to the individual differences of students from the perspective of personality, and provide them with suitable education to comprehensively improve students' CTS.},
  keywords={Correlation;Conferences;Computational modeling;Education;Artificial intelligence;computational thinking;personality traits;Big Five model;computational thinking evaluation},
  doi={10.1109/WAIE60568.2023.00026},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9583648,
  author={González-González, Carina S. and Caballero-Gil, Pino and García-Holgado, Alicia and García-Peñalvo, Francisco J. and Molina, Jezabel and del Castillo-Olivares, José M. and San Juan, Bernardo Candela and Cuesta, Sara García and Perdomo, Inmaculada and Caballero-Gil, Cándido and Gutíerrez-Vela, Francisco and Paderewski, Patricia and Holz, Verónica Violant and Iranzo, Rosa Gil and Ramos, Sofía},
  booktitle={2021 International Symposium on Computers in Education (SIIE)}, 
  title={COEDU-IN Project: an inclusive co-educational project for teaching computational thinking and digital skills at early ages}, 
  year={2021},
  volume={},
  number={},
  pages={1-4},
  abstract={Learning to program is the new literacy of the 21st century. Computational thinking, closely related to programming, requires thinking and solving problems with different levels of abstraction and is independent of hardware devices. The early childhood education stage provides teachers with the opportunity to lay the foundations for a comprehensive quality education using innovative tools and technologies. Educational robotics in early childhood education becomes a tool that facilitates the acquisition of knowledge to children, playfully, based on the principles of interactivity, social interrelationships, collaborative work, creativity, constructivist and constructionist learning, and a student-centered didactic approach, allowing in turn that student can acquire digital competencies and develop logical and computational thinking in an underlying way. This project explores the current state of teaching and learning computational thinking and programming in early childhood education in an inclusive manner. Moreover, the lack of diversity and inequality is particularly latent in science, Technology, Engineering, and Mathematics (STEM) fields. Therefore, this work considers this problem and presents an inclusive coeducation approach to this new literacy, eliminating gender stereotypes and extending them to people with Down syndrome and hospitalized minors.},
  keywords={Computers;Education;Tools;Collaborative work;Hardware;Programming profession;Robots;Computational thinking;programming;inclusion;digital literacy;STEM;childhood education},
  doi={10.1109/SIIE53363.2021.9583648},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9320732,
  author={Wang, Yichi and Zhang, Yi and Mao, Aiping and Wang, Jue and Li, Niu},
  booktitle={2020 Ninth International Conference of Educational Innovation through Technology (EITT)}, 
  title={The Research of Programming Teaching in Primary School on the Cultivation of Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={250-255},
  abstract={With the development of digital technologies, teaching computational thinking and relative skills in the K-12 curriculum can benefit students in thinking and create in the digital area. This study designed a programming course to help students develop computational thinking and relative skills, and conducted a practice in a primary school. Results indicated that students were benefited from three stages of the teaching process. Students' computational thinking knowledge, programming knowledge and skills, and problem-solving were developed after the learning of a semester. The programming works of the students also revealed that there was a tendency in the development of creativity.},
  keywords={Programming profession;Problem-solving;Testing;Media;Debugging;Visualization;Task analysis;computational thinking;programming course design;K-12 curriculum},
  doi={10.1109/EITT50754.2020.00051},
  ISSN={2166-0549},
  month={Dec},}@INPROCEEDINGS{9588856,
  author={Hadi, Mega Ekka and Nur Atiqoh, Khamida Siti and Kadir},
  booktitle={2021 9th International Conference on Cyber and IT Service Management (CITSM)}, 
  title={Improving Students' Mathematical Computational Thinking Using Scratch Program through Project Based Learning: A Development Research during Pandemic Covid-19}, 
  year={2021},
  volume={},
  number={},
  pages={1-5},
  abstract={This study aims to examine the development of Project Based Learning kits using Scratch program to improve students' mathematical computational thinking skills in statistics content. The research method used is Research and Development (R & D) approach which refers to Four-D model: Define, Design, Develop, and Disseminate. In the initial stage, researchers conducted preliminary research through literature studies, school surveys, and draft designs. The study produces Project Based Learning kits using Scratch program consist of student's worksheet, lesson plans, and an instrument of mathematical computational thinking. The design of the model was then revised by the expert trial subject. The subjects of the expert test were mathematics learning experts and several mathematics school teachers. The field Pre-Test and Post-Test were conducted in a Junior High School in Tangerang Selatan on mathematical computational thinking instruments, consisting of four essay test (8 question items). The collected data were analyzed using qualitative and quantitative techniques. In validity aspects, all the three learning kits are valid. From the aspect of effectiveness, the Project Based Learning model intervention can improve students' mathematical computational thinking skills. In terms of practicality, students' responses to the developed worksheets are positive.},
  keywords={COVID-19;Pandemics;Computational modeling;Instruments;Tools;Mathematical models;Research and development;mathematical computational thinking;scratch program;project based learning},
  doi={10.1109/CITSM52892.2021.9588856},
  ISSN={},
  month={Sep.},}@ARTICLE{5280664,
  author={Henderson, Peter B.},
  journal={Computer}, 
  title={Ubiquitous Computational Thinking}, 
  year={2009},
  volume={42},
  number={10},
  pages={100-102},
  abstract={The computational thinking view recognizes that underlying computing concepts are integral to our everyday lives and pervasive in many disciplines of study. Computer science, information systems, computer engineering, informatics, software engineering-these are among the smorgasbord of choices available to college students interested in a computing career. The choices for noncomputing-oriented students who want to learn about the field are even more confounding. Indeed, the established term "computer science" is not well-defined or well understood, leading to further confusion for students and their parents as well as the general public. These are some factors I view as contributing to the drop in interest in the study of computer science. The student should learn the fundamental concept of computer sciences. Computing education has been too slow moving from the computing = programming model to a more general and understandable model that captures the essence of the discipline for everyone.},
  keywords={Ubiquitous computing;Pervasive computing;Computer science;Information systems;Systems engineering and theory;Informatics;Software;Educational institutions;Engineering profession;Computer science education;Education;Computational thinking;Mathematical thinking},
  doi={10.1109/MC.2009.334},
  ISSN={1558-0814},
  month={Oct},}@INPROCEEDINGS{10685684,
  author={Zhou, Pinghong and Tang, Yumin and Zhang, Yi and Yu, Yue and Li, Yixin},
  booktitle={2024 International Symposium on Educational Technology (ISET)}, 
  title={Does computational thinking really have an impact on academic performance? A systematic review}, 
  year={2024},
  volume={},
  number={},
  pages={153-157},
  abstract={This study is a systematic review of the effects of computational thinking on students’ academic performance from 2006 to 2023. The main purpose of this study is to explore whether computational thinking can promote students’ academic performance and the characteristics of such research. After literature collection and screening from three databases, a total of $\mathbf{2 3}$ articles were included. According to the coding table, the literature was coded in five aspects, including basic information, sample, research, computational thinking and academic performance. Then, the publication trend, research types, effect results, computational thinking measurement and the characteristics of academic achievement evaluation of the impact of computational thinking and academic achievement are reviewed. It is found that computational thinking has a better effect on students’ academic achievement, and finally some suggestions are put forward.},
  keywords={Databases;Educational technology;Market research;Encoding;computational thinking;systematic review;academic achievement},
  doi={10.1109/ISET61814.2024.00038},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{5974984,
  author={Lina Wang},
  booktitle={2011 International Conference on Computer Science and Service System (CSSS)}, 
  title={Computational thinking and computer fundamental education}, 
  year={2011},
  volume={},
  number={},
  pages={1158-1159},
  abstract={Computer basic education with computer science, and other subjects crossover study, their status has become unshakable. Current international computer science. Today, an important concept widely concerned over the field of computer science calculation thinking. His definition, characteristics and development and basic computer education inseparable, especially for basic computer course teaching practice in an important role.},
  keywords={Computers;Education;Computer science;Computational modeling;Business;computer fundamental education;Computational Thinking;teaching model},
  doi={10.1109/CSSS.2011.5974984},
  ISSN={},
  month={June},}@INPROCEEDINGS{7119929,
  author={Haddad, Rami J. and Kalaani, Youakim},
  booktitle={2015 IEEE Integrated STEM Education Conference}, 
  title={Can computational thinking predict academic performance?}, 
  year={2015},
  volume={},
  number={},
  pages={225-229},
  abstract={This paper introduces the notion of predicting academic performance based on Computational Thinking. The integral role that Computational Thinking modalities play in engineering disciplines can serve as an accurate indicator of the student future academic success. Therefore, this study investigated the students' performance in a Computational Thinking course offered at the freshman level to predict student academic success. To achieve this goal, a two-year study of the correlation between the students' accumulative grade point averages and their grades obtained in this course was conducted. The performance of nine hundred and eighty two students in forty sections was assessed over the two-year period. It was concluded that the students' future academic performance is strongly correlated to their Computational Thinking skills assessed at the freshman level. This clearly suggests the viability of using Computational Thinking skills as a fairly accurate predictor of students' academic success. These results have also implied that the assessment of Computational Thinking can be used as an early intervention tool to improve the students' retention, progression, and graduation rates in STEM related disciplines.},
  keywords={Education;Computational modeling;Computers;Programming;Electrical engineering;Conferences;Correlation;Academic performance;Computational Thinking;Prediction of performance},
  doi={10.1109/ISECon.2015.7119929},
  ISSN={},
  month={March},}@INPROCEEDINGS{8615232,
  author={Wong, Gary K.W. and Jiang, Shan},
  booktitle={2018 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Computational Thinking Education for Children: Algorithmic Thinking and Debugging}, 
  year={2018},
  volume={},
  number={},
  pages={328-334},
  abstract={The benefits of developing children's computational thinking have been widely discussed with various approaches and learning tools. This paper reports the piloting of second-year longitudinal study, aiming to examine the effect of computational thinking education on the 5th grade students (n = 85) as they develop their algorithmic thinking and debugging skills. The results show that students benefited from our designed curriculum with learning gains in algorithmic thinking, especially in analyzing and finding the essential instructions to solve computational problems. Students also achieved significant gains in debugging programs. The study demonstrated that with age-appropriate learning materials and learning approach, even young children can develop computational thinking skills important to thriving in 21st century. This pilot study sets the direction of analyzing the rest of the 5th grade students' performance as well as the next year study.},
  keywords={Education;Games;Debugging;Programming profession;Problem-solving;computational thinking;algorithmic thinking;debug;primary school;coding education},
  doi={10.1109/TALE.2018.8615232},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9725213,
  author={Laura-Ochoa, Leticia and Bedregal-Alpaca, Norka},
  booktitle={2021 XVI Latin American Conference on Learning Technologies (LACLO)}, 
  title={Development of Computational Thinking Skills: An Experience With Undergraduate Students}, 
  year={2021},
  volume={},
  number={},
  pages={112-117},
  abstract={Computational thinking is a type of analytical thinking that is developed intentionally, that is, under a “learned” approach, and the best way to learn it is through computer programming. In this paper, the experience of using block-based programming environments such as Scratch, Lightbot and the PSelnt pseudo-code tool for the understanding of computational concepts and development of computational thinking skills is reported. A quasi-experimental methodological design was used, since it did not work with a control group. A mixed exploratory investigation was carried out. 85 first-year students from the Accounting Professional School of the National University of San Agustin de Arequipa participated in the experience. The results show that in introductory programming courses of short time period, teaching with block-based programming environments compared to the use of pseudocode with the PSelnt tool, facilitates the appropriation of computational concepts and the development of computational thinking skills; thus obtaining better learning results. It is concluded that block-based programming environments favor the construction of knowledge and foster the development of creativity and algorithmic thinking.},
  keywords={Design methodology;Education;Programming profession;Creativity;Programming environments;algorithmic thinking;computational thinking;constructionism;digital literacy;problem solving},
  doi={10.1109/LACLO54177.2021.00070},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10086259,
  author={Zhao, Fengzhi and Liu, Sijie},
  booktitle={2022 12th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Research on blended teaching reform based on computational thinking}, 
  year={2022},
  volume={},
  number={},
  pages={184-188},
  abstract={The outbreak of COVID-19 has impacted traditional teaching methods in schools, and blended teaching in the post-pandemic has gradually become a hot topic of research in higher education. Computational thinking, as one of the core literacies to be acquired in the 21st century, can help students realize the importance of computers as well as enable them to solve specific problems more effectively when facing real-life situations. The article takes the C language programming course as an example, analyzes the problems faced in teaching in the post-pandemic, introduces the concept of computational thinking and integrates it into all aspects of blended teaching design, pays attention to students' individual differences, and proposes a blended teaching model based on computational thinking and puts it into practice. The results show that this teaching model can improve students' learning performance, exercise students' computational thinking skills, and promote blended teaching reform and students' personalized development.},
  keywords={Computers;Training;COVID-19;Computational modeling;Education;C languages;Problem-solving;computional thinking;blended teaching;teaching reform;personalized learning},
  doi={10.1109/ITME56794.2022.00048},
  ISSN={2474-3828},
  month={Nov},}@INPROCEEDINGS{8938909,
  author={Ding, Haiyan},
  booktitle={2019 IEEE International Conference on Computer Science and Educational Informatization (CSEI)}, 
  title={Teaching Research on Computer Programming based on Cultivation of Computational Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={72-75},
  abstract={Computer programming is one of compulsory courses for science and engineering majors in colleges and universities, and C language is one of the most common programming language. In view of teaching problems of traditional programming course, for example, the concepts are abstract and difficult to understand for students, and students are lack of logical thinking of programming, this paper introduced the concept of computational thinking, analyzed how to integrate computational thinking into teaching contents of computer programming course, and flipped classroom teaching method was discussed too. The teaching practice showed that good teaching effects were achieved.},
  keywords={Programming profession;Online services;Training;Problem-solving;computer programming;pedagogy;computational thinking;flipped classroom},
  doi={10.1109/CSEI47661.2019.8938909},
  ISSN={},
  month={Aug},}@INBOOK{8709361,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={COMPUTATIONAL THINKING}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709361},}@ARTICLE{9790858,
  author={De Santo, Alessio and Farah, Juan Carlos and Martínez, Marc Lafuente and Moro, Arielle and Bergram, Kristoffer and Purohit, Aditya Kumar and Felber, Pascal and Gillet, Denis and Holzer, Adrian},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Promoting Computational Thinking Skills in Non-Computer-Science Students: Gamifying Computational Notebooks to Increase Student Engagement}, 
  year={2022},
  volume={15},
  number={3},
  pages={392-405},
  abstract={Computational thinking (CT) skills are becoming increasingly relevant for future professionals across all domains, beyond computer science (CS). As such, an increasing number of bachelor's and master's programs outside of the CS discipline integrate CT courses within their study program. At the same time, tools such as notebooks and interactive apps designed to support the teaching of programming concepts are becoming ever more popular. However, in non-CS majors, CT might not be perceived as essential, and students might lack the motivation to engage with such tools in order to acquire solid CT skills. This article presents a field study conducted with 115 students during a full semester on a novel computational notebook environment. It evaluates computational notebooks and CT skills in an introductory course on information technology for first-year undergraduates in business and economics. A multidimensional evaluation approach makes use of pre- and post-test surveys, lectures, and self-directed laboratory sessions tracking analytics. Our findings suggest that, in the process of learning CT for non-CS students, engagement in active learning activities can be a stronger determinant of learning outcomes than initial knowledge. Furthermore, gamifying computational notebooks can serve as a strong driver of active learning engagement, even more so than initial motivational factors.},
  keywords={Education;Hybrid learning;Codes;Programming profession;Encoding;Python;Games;Active learning;computational notebooks;computational thinking (CT);fieldwork learning;gamification;motivation},
  doi={10.1109/TLT.2022.3180588},
  ISSN={1939-1382},
  month={June},}
