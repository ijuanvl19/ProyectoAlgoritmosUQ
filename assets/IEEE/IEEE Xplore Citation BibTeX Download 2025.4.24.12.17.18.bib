@ARTICLE{9568871,
  author={Cutumisu, Maria and Adams, Catherine and Glanfield, Florence and Yuen, Connie and Lu, Chang},
  journal={IEEE Transactions on Education}, 
  title={Using Structural Equation Modeling to Examine the Relationship Between Preservice Teachers’ Computational Thinking Attitudes and Skills}, 
  year={2022},
  volume={65},
  number={2},
  pages={177-183},
  abstract={The growing interest of educational researchers in computational thinking (CT) has led to an expanding literature on assessments of CT skills and attitudes. However, few studies have examined whether CT attitudes influence CT skills. The present study examines the relationship between CT attitudes and CT skills for preservice teachers (PSTs). The Callysto CT test (CCTt) for Teachers was administered to  $n\,\,=$  105 PSTs to measure their CT attitudes and skills. Structural equation modeling was used to examine the relationship of participants’ CT and problem-solving skills with their attitudes toward CT, technology, coding, and data. Findings revealed that CT attitudes predicted CT skills and provided the first step in exploring the validity and reliability of the CCTt instrument.},
  keywords={Mathematical models;Programming profession;Problem-solving;Encoding;Education;Instruments;Computational modeling;Attitudes;computational thinking (CT);educational assessment;skills;structural equation modeling (SEM)},
  doi={10.1109/TE.2021.3105938},
  ISSN={1557-9638},
  month={May},}@ARTICLE{8130248,
  author={Aho, Alfred V.},
  journal={The Computer Journal}, 
  title={Computation and Computational Thinking}, 
  year={2012},
  volume={55},
  number={7},
  pages={832-835},
  abstract={We recommend using the term Computation in conjunction with a well-defined model of computation whose semantics is clear and which matches the problem being investigated. Computer science already has a number of useful clearly defined models of computation whose behaviors and capabilities are well understood. We should use such models as part of any definition of the term computation. However, for new domains of investigation where there are no appropriate models it may be necessary to invent new formalisms to represent the systems under study.},
  keywords={},
  doi={10.1093/comjnl/bxs074},
  ISSN={1460-2067},
  month={July},}@INPROCEEDINGS{8400127,
  author={Kaila, E. and Laakso, M-J. and Kurvinen, E.},
  booktitle={2018 41st International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)}, 
  title={Teaching future teachers to code — Programming and computational thinking for teacher students}, 
  year={2018},
  volume={},
  number={},
  pages={0677-0682},
  abstract={Programming is one of the key assets in the modern society. In addition to teaching programming to future programmers, it has become more and more important to teach it alongside computational thinking to all students. We designed and implemented a programming course aimed for teacher students at our university. The goal of the course was to teach programming, computational thinking and the methods and tools used in programming education. The course was divided into two parts: first, the students were taught basic programming skills by utilizing tutorial-based learning with automatically assessed electronic exercises and play-based programming tasks. In the second part, the students utilized the acquired skills by teaching programming integrated into mathematics to children at elementary school level. The students worked really hard throughout the course, completing more than 90 % of all tasks in average. Moreover, the feedback from the tutorial sessions and the practice lessons at schools was mainly positive.},
  keywords={Programming profession;Tutorials;Tools;Task analysis;Mathematics;programming;computational thinking;teacher education;teacher students},
  doi={10.23919/MIPRO.2018.8400127},
  ISSN={},
  month={May},}@INPROCEEDINGS{8589328,
  author={Tang, Yanqin and Chen, Weiwei and Li, Zhigang and Shi, Lei and Wu, Yongfen},
  booktitle={2018 9th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Blended Learning of "Data Structure" Course Based on Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={403-406},
  abstract={With the rapid development of information and educational technology, computational thinking has become one of the basic qualities and abilities that all students should possess. Based on the "data structure" course, this paper adopts blended learning based on MOOC/SPOC to improve the students' ability of computational thinking, improve the level of students' programming and solve practical problems. Practice has proved that they are effective methods in the "data structure" teaching.},
  keywords={Education;Handheld computers;Information technology;Data structures;computational thinking;data structure;blended learning;practice teaching},
  doi={10.1109/ITME.2018.00096},
  ISSN={2474-3828},
  month={Oct},}@INPROCEEDINGS{7751816,
  author={Basogain, Xabier and Olabe, M. A. and Olabe, Juan Carlos and Ramírez, R. and Del Rosario, M. and Garcia, J.},
  booktitle={2016 International Symposium on Computers in Education (SIIE)}, 
  title={PC-01: Introduction to computational thinking: Educational technology in primary and secondary education}, 
  year={2016},
  volume={},
  number={},
  pages={1-5},
  abstract={This article describes the design and implementation of the course Introduction to Computational Thinking (PC-01) for primary and secondary education. The course introduces the “concepts” and core “processes” of Computational Thinking using a visual programming environment. The design of the course PC-01 includes a set of multimedia content, learning tools and technologies that help teachers and students in the teaching-learning process. These tools allow the teacher the successful delivery of the course content as well as the individual/collective monitoring of students' progress in the course. Students have access to their progress throughout the course and participate in creative and collaborative tasks. This course also serves to introduce transversely educational technologies to many students of primary and secondary education. The technological environment integrates the online teaching resources and the methodological tools of the course. The course uses Scratch 2.0 as the programming environment and Moodle as the learning platform. At present the course is being implemented in public schools in the Dominican Republic.},
  keywords={Computers;Programming environments;Tutorials;Multimedia communication;Collaboration;Programming;Computational Thinking;Learning Technologies;Scratch;Moodle Learning Platform},
  doi={10.1109/SIIE.2016.7751816},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8433456,
  author={Jamil, Hasan},
  booktitle={2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={A Free-Choice Social Learning Network for Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={69-71},
  abstract={The need to attract learners and improve retention in computational thinking classes has never been greater than presently. Alarmingly, research suggests that the relative popularity of computer science in K-12 and colleges is not increasing while other STEM subjects are witnessing substantial rise in enrollment. Moreover, more than one third of those who choose computer science, drop out or fail the first programming class dashing hopes of building a computationally savvy workforce for the emerging global economy. In this paper, we introduce a novel social networking system, called OpenSchool, for learners and educators alike, which is able to double as a contemporary social networking system along the lines of Facebook for instance, and serve the special needs of free-choice STEM learners, computer science learners in particular. We discuss its salient features, highlight its advantages, collaborating capabilities, and learning support for STEM, especially computational thinking, learners.},
  keywords={Facebook;Programming profession;Tools;Python;social learning;computational thinking;social network;STEM;intelligent tutoring systems;free choice learning},
  doi={10.1109/ICALT.2018.00023},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{10260900,
  author={Jha, Nitesh Kumar and Bhowmik, Plaban Kumar and Bhagat, Kaushal Kumar},
  booktitle={2023 IEEE International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Usability Evaluation of an Online Inquiry-Based Learning Platform for Computational Thinking (CT-ONLINQ)}, 
  year={2023},
  volume={},
  number={},
  pages={182-186},
  abstract={With the increased focus on Computational Thinking (CT) in education, there has been an increase in the development of learning platforms to teach CT. The current study developed an Online Inquiry-based learning platform for Computational Thinking (CT-ONLINQ) to support CT activities using Inquiry-based Learning (IBL) pedagogy. IBL-based CT steps include algorithm design, analysis, and comparison of algorithms. The platform allows students to explore multiple solutions and provides hints as support during problem-solving activities. A 4-week experimental study was conducted to evaluate the usability of the online platform. A total of 79 9th-grade students volunteered to participate in this study to complete six activities. Subsequently, the students completed the SUS questionnaire and open-ended feedback questions. Results showed that around 80% of the students scored above the “Good” category (70-80), with a total average score of 78.45. Also, we analyzed the difference in rating scores among groups based on multiple background factors. Findings showed an average rating above 4 with no significant difference between the ratings among factors such as gender and math performance (below-above average math scores). In addition, analysis of the feedback comments showed that the platform is user-friendly, with students enthusiastic about learning coding on the platform.},
  keywords={Education;Encoding;Problem-solving;Usability;Computational Thinking;Inquiry-based Learning;Online Platform;Algorithm design;System Usability Scale},
  doi={10.1109/ICALT58122.2023.00059},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{10148435,
  author={Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Scratch Project Analysis: Relationship Between Gender and Computational Thinking Skill}, 
  year={2022},
  volume={},
  number={},
  pages={567-571},
  abstract={The computer science industry suffers from a significant gender gap. This situation likely hinders the creation of inclusive and user-friendly systems due to a bias in perspectives. To narrow this gender gap, this study investigates how females program to increase interest in computer sciences. Specifically, 60 open Scratch projects on the web are analyzed to clarify differences in the Computational Thinking scores with respect to gender. The difference in the Computational Thinking score by gender suggests that the gap may be due to the lack of the Synchronization element in female users’ projects. A deeper understanding of how people program based on gender should support creating an effective and inclusive learning environment and allow educators to create programming materials that attract both genders equally into the field.},
  keywords={Industries;Education;Synchronization;Programming profession;computational thinking;computer science;gender bias;Scratch;STEM},
  doi={10.1109/TALE54877.2022.00099},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{9973101,
  author={Honglin, Liu and Yifan, Niu},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={The Construction of Project-Based Learning Model Based on Design Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={173-177},
  abstract={Project-based learning is a new student-centered teaching method, which can effectively cultivate learners' innovation ability and problem-solving ability. As a creative way of thinking to solve problems in the real environment, design thinking can be well integrated into project-based learning. This paper analyzes the internal relationship between design thinking and project-based learning, constructs the project-based learning model based on design thinking according to the process model of design thinking and the relevant theories of project-based learning, and expounds the development of relevant teaching in detail.},
  keywords={Computer science;Analytical models;Technological innovation;Computational modeling;Education;Problem-solving;design thinking;project-based learning;implementation of project activities;teaching model},
  doi={10.1109/CSTE55932.2022.00038},
  ISSN={},
  month={May},}@INPROCEEDINGS{8363456,
  author={Burbaitė, Renata and Drąsutė, Vida and Štuikys, Vytautas},
  booktitle={2018 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Integration of computational thinking skills in STEM-driven computer science education}, 
  year={2018},
  volume={},
  number={},
  pages={1824-1832},
  abstract={In the context of Computer Science (CS) education, one of the most important goals is the development of computational thinking (CT) and problem solving skills. Computational thinking skills are closely related to the CS concepts and approaches. These skills cover fundamental programming concepts such as task decomposition, abstractions and generalization, data structures and algorithms. On the other hand, CS education challenges, promote the search for new educational tools, methods, activities and resources. Consequently, CS education should be extended by adding the STEM (Science, Technology, Engineering and Mathematics) paradigm principles. The aim of this paper is to show how STEM-driven CS education supports and ensures the development of computational thinking at the high school. We present the already published STEM-driven CS education approach aiming at extending it by introducing a model to assess student achievements, according to the revised Bloom's taxonomy in the connection with CT skills. As a practical implementation, we describe a curriculum of Programming Basics at the high school with respect to STEM-driven aspects and CT skills. We introduce two case studies implemented in the real educational environment. They provide the evidence of availability of our approach.},
  keywords={Engineering education;Conferences;Three-dimensional displays;Computational Thinking;STEM;STEM-Driven education;Computer Science education;STEM-driven CS education;Revised Bloom's Taxonomy},
  doi={10.1109/EDUCON.2018.8363456},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9973148,
  author={Yang, Chunmei and Lv, Wencheng and Zhang, Wenlan},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={PBL Teaching with Design Thinking: Construction and Case Study of Programming Teaching Model in High School}, 
  year={2022},
  volume={},
  number={},
  pages={69-76},
  abstract={Programming education is a crucial part of school education and an important way to effectively enhance learners' learning abilities. However, current programming education in secondary schools is not as effective as it could be in concrete implementation. Project-based learning is a possible path for programming education, but it is still difficult to achieve the goal of cultivating innovative talents by project-based learning alone. Therefore, in this paper, we integrate design thinking into project-based learning, firstly, we analyze the connotation of design thinking and explain the necessity of integrating design thinking into project-based learning; secondly, we construct a new model and practice process framework of secondary school programming PBL teaching integrating design thinking based on the general process of project-based learning and the basic model of design thinking, and explain the connotation. Finally, a case study of “Python programming” in the new version of high school IT textbook is conducted to provide reference for the practice of secondary school programming education.},
  keywords={Analytical models;Computational modeling;Education;Reflection;Problem-solving;Programming profession;Python;design thinking;project-based learning;secondary school programming;model construction;curriculum case study},
  doi={10.1109/CSTE55932.2022.00019},
  ISSN={},
  month={May},}@INPROCEEDINGS{9610232,
  author={Bo, Xiaoyong and Tang, You},
  booktitle={2021 International Conference on Computers, Information Processing and Advanced Education (CIPAE)}, 
  title={Teaching Research on Database Principle and Application Course Based on Computing Thinking and CDIO Mode}, 
  year={2021},
  volume={},
  number={},
  pages={313-316},
  abstract={Discusses the problem of training students' computing thinking in the teaching of database principles and applications, and analyses the computing thinking reflected in the course of database principles and applications. In the course of teaching, the training of computational thinking is penetrated into the teaching content, and the course practice teaching is carried out by using the CDIO engineering teaching method to strengthen the training of students' Computational Thinking ability.},
  keywords={Training;Technological innovation;Databases;Information processing;Solids;Engineering education;Computational Thinking;CDIO;Database Principles;Teaching Method},
  doi={10.1109/CIPAE53742.2021.00081},
  ISSN={},
  month={May},}@INPROCEEDINGS{6901492,
  author={Boechler, Patricia and Artym, Corbett and Dejong, Erik and Carbonaro, Mike and Stroulia, Eleni},
  booktitle={2014 IEEE 14th International Conference on Advanced Learning Technologies}, 
  title={Computational Thinking, Code Complexity, and Prior Experience in a Videogame-Building Assignment}, 
  year={2014},
  volume={},
  number={},
  pages={396-398},
  abstract={Computational-thinking skills are an essential intellectual amplifier for all scientific and professional disciplines. Embedding these skills in the K-12 and University curricula is necessary for training the next generation of thinkers. A widely adopted approach to doing so is through simple and visual programming languages like Scratch and engaging assignments like video-game construction. In this work, we report on an empirical study we conducted with senior undergraduate education students aiming to understand how prior experience enables students to better develop their computation-thinking skills through a Scratch-based video-game assignment.},
  keywords={Games;Complexity theory;Education;Correlation;Measurement;Software;Media;computational thinking;video-games;game-based learning;scratch},
  doi={10.1109/ICALT.2014.118},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{9155816,
  author={Malva, Liina and Hooshyar, Danial and Yang, Yeongwook and Pedaste, Margus},
  booktitle={2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Engaging Estonian primary school children in computational thinking through adaptive educational games: A qualitative study}, 
  year={2020},
  volume={},
  number={},
  pages={188-190},
  abstract={While computational thinking (CT) has been identified as one of the fundamental 21st century skills that can be applied to different domains, school students usually show negative attitude toward learning CT. Educational games have been applied by several researchers to address related issues faced for promoting CT. Even though such games have shown some success in promoting CT, they fall short when it comes to acquisition of CT skills (they rather promote abstract and conceptual knowledge) and offering adaptivity to each player. To address these issues and improve the existing games, we developed an adaptive game called AutoThinking for teaching both CT concepts and skills, engaging students with individually tailored gameplay and learning. We conducted a qualitative study aimed at understanding the cognitive and affective experiences of Estonian primary school children. The findings showed that AutoThinking is making children feel challenged, happy, and confident, while activating their thinking process during the gameplay. All children perceived the game positively and found it to be a good tool for learning.},
  keywords={Games;Education;Programming profession;Syntactics;Computer languages;Interviews;adaptive educational game;computational thinking;primary school children;qualitative study},
  doi={10.1109/ICALT49669.2020.00061},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{8820850,
  author={Otero Avila, Christiano and Foss, Luciana and Bordini, Adriana and Simone Debacco, Maria and da Costa Cavalheiro, Simone André},
  booktitle={2019 IEEE 19th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Evaluation Rubric for Computational Thinking Concepts}, 
  year={2019},
  volume={2161-377X},
  number={},
  pages={279-281},
  abstract={This paper presents a method of evaluating activities that are proposed for the development of Computational Thinking skills. An evaluation rubric is proposed to identify the level of development of the concepts of abstraction, generalization, decomposition and algorithmic thinking. The rubric was applied by Computer Science teachers in the evaluation of activities of the CS Unplugged project. It was possible to observe that all concepts of the CT were present in the Unplugged activities, but without reaching the maximum score of the rubric.},
  keywords={Instruments;Problem-solving;Task analysis;Computer science;Proposals;Classification algorithms;Indexes;Computational Thinking, rubric, CS Unplugged},
  doi={10.1109/ICALT.2019.00089},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{8166701,
  author={Missiroli, Marcello and Russo, Daniel and Ciancarini, Paolo},
  booktitle={2017 IEEE 30th Conference on Software Engineering Education and Training (CSEE&T)}, 
  title={Cooperative Thinking, or: Computational Thinking Meets Agile}, 
  year={2017},
  volume={},
  number={},
  pages={187-191},
  abstract={In this paper, we propose the Computational Thinking concept, which is obtained by enhancing by merging the values of Computational Thinking and Agile. We analyze four existing teaching models for training Cooperative Thinkers, supported by experimental data, and propose an educational path that can promote the early development of this complex skill.},
  keywords={Education;Programming profession;Computational modeling;Encoding;Software engineering;Computational Thinking;Agile Development;Education},
  doi={10.1109/CSEET.2017.37},
  ISSN={2377-570X},
  month={Nov},}@ARTICLE{9321708,
  author={Chai, Xiaolin and Sun, Yan and Luo, Hong and Guizani, Mohsen},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={DWES: A Dynamic Weighted Evaluation System for Scratch based on Computational Thinking}, 
  year={2022},
  volume={10},
  number={2},
  pages={917-932},
  abstract={Scratch is a programming environment, which is widely adopted as the first language to enter the programming world. Since Scratch projects are rich in multimedia resources, it can be time-consuming to judge them by hand, requiring manual execution with the understanding of each project. Auto-judgment tools come into being, they can rapidly evaluate the project in some way. Unfortunately, the existing tools are too rigid and they ignore the diversity of Scratch projects. To address this issue, we propose a new dynamic weighted evaluation system (DWES). First, we define a new computational thinking (CT) evaluation criteria from eight aspects. Second, based on the proposed criteria, we present an analysis tool that automatically assesses the CT skills of the learners’ projects. Third, considering the characteristics of projects, we dynamically adjust the evaluation results according to types, so that a single standard is no longer applied roughly to all. This process is data-driven, we consider the CT performance and scripts of projects. We prove the rationality of the evaluation criteria from the aspect of program complexity. Through the correlation analysis between DWES CT scores and experts’ ratings, we find that compared with Dr. Scratch, the correlation coefficient has increased.},
  keywords={Tools;Sprites (computer);Manuals;Games;Computer languages;Complexity theory;Programming profession;Scratch;computational thinking;evaluation system;dynamic weighted},
  doi={10.1109/TETC.2020.3044588},
  ISSN={2168-6750},
  month={April},}@INPROCEEDINGS{10107885,
  author={Wang, Jihan and Zhang, Wei and Zeng, Xinyao and Li, Panpan},
  booktitle={2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT)}, 
  title={A Computational Thinking Assessment Tool on Text- Based Programming}, 
  year={2023},
  volume={},
  number={},
  pages={326-331},
  abstract={The assessment of computational thinking (CT) skills based on text-based programming is a necessary part of the implementation of CT education in higher education. However, the current research on CT assessment is mostly single-approach, which is not effective in accurately measuring numerous competencies of CT skills and has the disadvantage of assessment limitation. In order to solve the problem of assessment limitations, this paper defines the content of CT evaluation from the perspective of text-based programming and constructs a multidimensional test method. Different test schemes are selected according to the characteristics of CT skills, and assessment tools are developed by combining the question test, programming test and scale survey, and the assessment tools are used to evaluate and analyze learners' CT skills from qualitative and quantitative perspectives. The results show that the evaluation indicators and test questions designed on text-based programming are more consistent with the evaluation objectives. And the approach of evaluating CT skills from both qualitative and quantitative perspectives can reflect learners' CT skills more comprehensively and accurately.},
  keywords={Current measurement;Education;Information technology;Programming profession;computational thinking;text-based programming;assessment tool;qualitative analysis;quantitative analysis},
  doi={10.1109/ICEIT57125.2023.10107885},
  ISSN={},
  month={March},}@INPROCEEDINGS{8567182,
  author={Deng, Tzong Sheng},
  booktitle={2018 1st International Cognitive Cities Conference (IC3)}, 
  title={Artistic Activity Through Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={132-134},
  abstract={The purpose of the paper is to review concept of art in STEAM, and to discuss what and how it work in computing thinking. There are various kind of computing technologies to make shapes, pictures and signs for artistic activities, that be generated by algorithmic programme. In series of ideas are made by computing thinking, extending perceive for expression. There are three form of creation, which code as translator between perceive (see, hear...) and performance. The paper conclude that educators could apply artistic activities through computing thinking to extend the range of materials and spirits of inquiry by applying technologies in creation.},
  keywords={Art;Painting;Software;Visualization;Education;Music;art;computational thinking;STEAM education},
  doi={10.1109/IC3.2018.00-44},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{10714517,
  author={Turchi, Tommaso},
  booktitle={2024 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={FlowPilot: A Generative AI-Driven Visual Language for Computational Thinking Education}, 
  year={2024},
  volume={},
  number={},
  pages={353-355},
  abstract={This paper introduces FlowPilot, a novel flow-based visual programming language designed to enhance Computational Thinking (CT) education. FlowPilot leverages generative AI to create a dynamic, browser-based environment where users can construct programs using natural language descriptions. By integrating AI-driven block generation with a flow-based visual interface, FlowPilot supports key CT pillars such as abstraction and decomposition. This approach offers a unique platform for learners to explore programming concepts at various levels of complexity, fostering a deeper understanding of computational processes.},
  keywords={Visualization;Computer languages;Generative AI;Natural languages;Education;Complexity theory;Programming profession;Visual Programming;Computational Thinking;Generative AI},
  doi={10.1109/VL/HCC60511.2024.00046},
  ISSN={1943-6106},
  month={Sep.},}@ARTICLE{7795838,
  author={Enríquez, C. and Aguilar, O. and Domínguez, F.},
  journal={IEEE Latin America Transactions}, 
  title={Using robot to motivate computational thinking in high school students}, 
  year={2016},
  volume={14},
  number={11},
  pages={4620-4625},
  abstract={The importance today is the development of computational thinking of technological professionals. This kind of thinking is useful for solving algorithms, analyzing, designing, coding and generating tests in a computer language. Today, obtaining knowledge and skills is related to the use of technology. In this paper, a robot is used as a teaching element to motivate the generation process of computational thinking in students of high school level. Measurement of variables, such as: advantages, interest, competition and operating time serve as indices to determine the degree of acceptance of this educational tool.},
  keywords={Robot sensing systems;IEEE transactions;Service robots;Silicon compounds;Java;Algorithm design and analysis;Computational thinking;Robot Lego MindStorm NTX;Skills},
  doi={10.1109/TLA.2016.7795838},
  ISSN={1548-0992},
  month={Nov},}@INPROCEEDINGS{8363469,
  author={Sabitzer, Barbara and Demarle-Meusel, Heike and Jarnig, Maria},
  booktitle={2018 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Computational thinking through modeling in language lessons}, 
  year={2018},
  volume={},
  number={},
  pages={1913-1919},
  abstract={In contrast to the field of computer-supported or computer-assisted language learning (CALL), which has been investigated intensively for the last decades since the beginning of e-learning and technology-enhanced learning, computational thinking and computer science concepts are not quite common in the context of language lessons. Computational thinking is a problem solving process that, at first sight, has not much to do with language learning. However, as demanded by Jeannette Wing in 2006, it should be taught to everyone like reading, writing and mathematics. By introducing computational thinking in language lessons e.g. through modeling we could "kill two birds with one stone": On the one hand, we can teach computational thinking and basics of computer science at all school levels even if there is no related subject, e.g. in primary schools. On the other hand, computational thinking tools like modeling can support language learning in different ways and help to train text comprehension, to acquire and elaborate vocabulary or to visualize grammar rules etc. This paper describes some creative possibilities of introducing computational thinking through modeling in language lessons in primary and secondary education. Besides best practices, it further presents some experiences and results gained from teacher observation, interviews and informal feedback from students and teachers.},
  keywords={Computational modeling;Unified modeling language;Education;Object oriented modeling;Conferences;Problem-solving;computational thinking;modeling;education;language learning},
  doi={10.1109/EDUCON.2018.8363469},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{10568269,
  author={Pale-Parra, Daniel and Pérez-Salazar, Christian and Sánchez-García, Ángel J. and Ocharán-Hernández, Jorge Octavio},
  booktitle={2023 11th International Conference in Software Engineering Research and Innovation (CONISOFT)}, 
  title={Web Systems for the Development of Computational Thinking in Software Engineering Students: A Systematic Literature Review}, 
  year={2023},
  volume={},
  number={},
  pages={132-139},
  abstract={Many undergraduate students in software engineering have trouble developing computational thinking. Several tools have been reported in the literature to support the development of computational thinking. This paper reports a Systematic Literature Review to present the characteristics that have made successful web systems that support the development of computational thinking in recent years and the reported limitations. Eighteen primary studies were selected where the strategies used are usually learning through lessons, practicing with exercises, working through games, and using feedback. The systems found have been used at different elementary, middle, high school, and bachelor's degree levels. Finally, the main limitations reported in using these systems were mainly the difficulty of the topics, the previous knowledge that the students should have, the attitude that the students showed and the lack of motivation. Finally, we make some recommendations to software engineering curriculum planners and programming teachers about systems for developing computational thinking.},
  keywords={Technological innovation;Systematics;Bibliographies;Games;Programming;Software engineering;Computational thinking;web system;Learning;Software Engineering;students},
  doi={10.1109/CONISOFT58849.2023.00026},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{10216466,
  author={Pietros, Jennifer and Sweetman, Sara and Shim, Minsuk},
  booktitle={2022 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={Teacher Practices for Computational Thinking Implementation in Elementary Science}, 
  year={2022},
  volume={},
  number={},
  pages={2059-2065},
  abstract={Computational thinking (CT) is a key component of computer science and a foundational thinking process in K-12 classrooms. CT can be easily integrated into science lessons with the right policies, programs, and practices in place. This paper explores the current practices of CT in a northeast US state based on survey data collected from teachers. The research uncovers how much teaching time is spent teaching science and the percentage of lessons that have CT concepts and approaches present in the science instruction while describing what these lessons look like. This paper then discusses the next steps for implementation efforts based on the described CT practices in elementary science.},
  keywords={Surveys;Computer science;Scientific computing;Education;Computational intelligence;Computational thinking;elementary science;teacher practices},
  doi={10.1109/CSCI58124.2022.00370},
  ISSN={2769-5654},
  month={Dec},}@INPROCEEDINGS{9799197,
  author={Dancer, Frances C. and Tanner, April L. and Thomas, Mary M.},
  booktitle={2021 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={Challenges of Incorporating a Mobile Device Forensics Detectives Summer Camp with Critical Thinking Amongst K-12 Students}, 
  year={2021},
  volume={},
  number={},
  pages={1026-1030},
  abstract={The researchers participated in a Mobile Device Forensics Detectives Summer Camp with intermediate students from the surrounding areas of Jackson, MS, who debated on critical thinking, deductive reasoning, problem-solving skills, defined the meaning of Mobile Device Forensics and what it entails in order for the students to achieve proficient or advanced levels on the students’ state exams. The researchers had to overcome some barriers for the middle school students that subsequently had not occurred previously due to Covid-19, measure how effective this process progressed moving forward by the external evaluator, and discuss the challenges faced by the Leadership Team of the Mobile Device Forensics Group and how the researchers alleviated some of those issues.},
  keywords={Leadership;Scientific computing;Forensics;Education;Mobile handsets;Cognition;Problem-solving;mobile device forensics;electronic Crime Scene Investigation (eCSI);summer camp;critical thinking;problem-solving skills},
  doi={10.1109/CSCI54926.2021.00221},
  ISSN={},
  month={Dec},}
