@INPROCEEDINGS{8939643,
  author={Maiyuran, Jitesh and Bajwa, Ayesha and Bell, Ana and Hemberg, Erik and O’Reilly, Una-May},
  booktitle={2019 IEEE Learning With MOOCS (LWMOOCS)}, 
  title={How Student Background and Topic Impact the Doer Effect in Computational Thinking MOOCs}, 
  year={2019},
  volume={},
  number={},
  pages={47-52},
  abstract={The following topics are dealt with: computer aided instruction; educational courses; educational institutions; teaching; further education; distance learning; computer science education; Internet; gender issues; biomedical education.},
  keywords={Programming;Electronic learning;Computer aided instruction;Encoding;Computational modeling;Linear regression;doer effect;learning by doing;computational thinking;Massive Open Online Courses (MOOCs)},
  doi={10.1109/LWMOOCS47620.2019.8939643},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10494259,
  author={Song, Wenge and Zhang, Ganquan},
  booktitle={2023 16th International Symposium on Computational Intelligence and Design (ISCID)}, 
  title={Creative Thinking Stimulates Innovation Design of CAM Mechanism}, 
  year={2023},
  volume={},
  number={},
  pages={51-53},
  abstract={CAM mechanism is widely used in engineering, it can realize the arbitrary and complex motion curve of the follower [1]. The typical design method of CAM pitch curve is based on the principle of inversion [2], [3]. In the process of designing CAM, the author uses creative thinking [4] to raise the question whether the design steps based on the inversion principle can be applied "in reverse". Based on this problem, the author takes the plate CAM mechanism with translating knife-edge follower as an example and verifies the design results of CAM pitch curve through two different motion curves. The results show that the inverse application on the principle of the inversion method does not change the CAM pitch curve.},
  keywords={Employee welfare;Technological innovation;Design methodology;Computational intelligence;CAM design;inverse thinking;motion curve},
  doi={10.1109/ISCID59865.2023.00020},
  ISSN={2473-3547},
  month={Dec},}@INPROCEEDINGS{10847445,
  author={Rijadi, Safara Cathasa Riverinda and Qhusna, Priya Mita Hartati and Thohiroh, Elvira Lailatuth and Damayanti, Vira and Kharian, Rafi Ahmad and Kusumasari, Tien Fabrianti},
  booktitle={2024 IEEE 16th International Conference on Computational Intelligence and Communication Networks (CICN)}, 
  title={Codify: A Programming Learning Tool Prototyping Using Design Thinking Method}, 
  year={2024},
  volume={},
  number={},
  pages={1058-1062},
  abstract={Programming skills are very important nowadays, especially for students who are majoring in computer science. In order to have good knowledge, students should be able to learn independently. This study proposes Codify, a programming learning tool or e-learning platform for students where they are able to independently use several types of questions, including multiple choices, drop-down, drag-anddrop, and blank code. If students are not able to answer correctly, the system will recommend similar cases. For this study, the researchers applied the design thinking method to create a prototype of Codify to ensure that students who use it have a good user experience. Out of six scales in the user experience questionnaire (UEQ), five scales (Attractiveness, Efficiency, Dependability, Stimulation, and Novelty) are included in the Excellent category, while one scale (Perspicuity) is included in the Good category, meaning the Codify prototype has an excellent user experience with a slight improvement.},
  keywords={Computer languages;Electronic learning;Codes;Prototypes;Programming;Benchmark testing;User experience;Communication networks;Computational intelligence;design thinking method;user experience questionnaire (UEQ);programming learning tools;e-learning},
  doi={10.1109/CICN63059.2024.10847445},
  ISSN={2472-7555},
  month={Dec},}@INPROCEEDINGS{9962465,
  author={Mohammadi-Aragh, Mahnas Jean and Sun, Yan and Dyer, Jamie L. and Harris, Jonathan G. and Robinson, Chase A. and Bai, Mengni and Kavanagh, Jolie K. and Ball, Kimberly E.},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching Computational Thinking and Spatial Visualization in K-12 with 3D Weather Visualizations}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={This Innovative Practice Full Paper presents a K-12 teacher training workshop for computational thinking instruction. Computational thinking refers to a set of skills that are necessary for success in engineering and science careers. Teaching computational thinking skills prior to university-level enrollment helps students be more successful in their degree programs. Our project serves as an attempt to innovate science education by designing and testing data-driven, scientific inquiry experiences that integrate teaching and learning of atmospheric science with computational thinking and practices in authentic, innovative, and effective ways. In this paper, we describe our design process for developing authentic computational thinking and spatial visualization modules for the two-week computational thinking professional development that uses 3D weather visualizations to train K-12 teachers in eleven computational thinking and spatial visualization skills.},
  keywords={Training;Three-dimensional displays;Data analysis;Engineering profession;Conferences;Education;Data visualization;computational thinking;spatial visualization;K-12},
  doi={10.1109/FIE56618.2022.9962465},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9725163,
  author={Curasma, Ronald Paucar and Villalba-Condori, Klinge Orlando and Jara, Nolan Jara and Llamoca, Rosa Quispe and Chávez, Julio Cesar Cabrera and Ponce-Aranibar, María Del Pilar},
  booktitle={2021 XVI Latin American Conference on Learning Technologies (LACLO)}, 
  title={Computational Thinking and Block-Based Programming for Beginning Engineering Students: Systematic Review of the Literature}, 
  year={2021},
  volume={},
  number={},
  pages={530-533},
  abstract={In the article, the authors conduct a systematic review of computational thinking in higher education. For this review, the following research topics were taken into account: computational thinking skills in higher education, programming teaching methods in beginning engineering students, and block-based programming tools in higher education.},
  keywords={Systematics;Education;Engineering students;Programming profession;computational thinking;higher education;block programming;engineering students},
  doi={10.1109/LACLO54177.2021.00096},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9725169,
  author={Scaico, Alexandre and Ferreira, Willams Pinto and Alves, Emmanuel Mendes and Scaico, Pasqueline Dantas},
  booktitle={2021 XVI Latin American Conference on Learning Technologies (LACLO)}, 
  title={Teaching Computational Thinking and Introduction to Programming through Robotics amid the Covid19 Pandemic - An Experience Report}, 
  year={2021},
  volume={},
  number={},
  pages={32-37},
  abstract={Nowadays, the skills present in computer programming are important in several fields of work. Computational thinking, the ability to create algorithms for solving problems and logical reasoning are some of the skills developed when someone learn to program. This paper presents an experience report of an extension project that aimed to teach computational thinking and introduction to programming with robotics support for children at school in person, but which had to be adapted for remote learning due to the COVID-19 pandemic. The original planning, adaptations for remote learning, and the application and evaluation of the course will be reported.},
  keywords={COVID-19;Pandemics;Distance learning;Education;Programming;Cognition;Planning;computational thinking;Arduino;remote learning;robotic},
  doi={10.1109/LACLO54177.2021.00011},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{10589932,
  author={Li, Xiao Jing and Liu, Si Qi and Pan, Tong and Chen, Bin Ru and Zhao, Lei and Wang, Ming Ming},
  booktitle={2024 6th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={Research on the Instructional design of Computer Foundation Course of University Oriented by Computational Thinking}, 
  year={2024},
  volume={},
  number={},
  pages={328-331},
  abstract={The course “Computer Foundation of University” shoulders the mission of cultivating computational thinking and information literacy, and plays an important basic role in the general education curriculum system of undergraduate education. How to put computational thinking training into practice in teaching strategy design is problem worth researching. This paper gives an understanding of the nature, status and role of the course firstly. On this basis, instructional design research is carried out from the aspects of objective design, content design, teaching strategy design and evaluation design, etc. The purpose is to find feasible implementation strategies according to the characteristics and training objectives of the course, so as to realize the teaching objectives of the course and truly implement the training of computational thinking.},
  keywords={Training;Computer science;computer foundation course;computational thinking;instructional design},
  doi={10.1109/CSTE62025.2024.00068},
  ISSN={},
  month={April},}@INPROCEEDINGS{10013462,
  author={Beatriz, Lliteras Alejandra and Alejandro, Artopoulos and Alejandro, Fernández and Jimena, Huarte},
  booktitle={2022 XVII Latin American Conference on Learning Technologies (LACLO)}, 
  title={AlfaDatizando: a Data Visualization Platform to work Computational Thinking in Digital Humanities}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Computational Thinking is one of the fundamental skills of the 21st century and will be a necessary part of all future work, so it is essential that children learn it in school. One way to work on Computational Thinking is through data visualization. This paper presents the motivation, design and implementation of a platform called AlfaDatizando, through which it is possible to work with data visualization activities to promote the skill of Computational Thinking in Digital Humanities. AlfaDatizando allows the creation, resolution, and feedback of data visualization activities without the need to use another platform. It also allows sharing didactic sequences and data sources with the educational community registered in the platform. AlfaDatizando is still in an early stage of development.},
  keywords={Data visualization;Social networking (online);Blogs;Big Data;Visualization;Humanities;Silicon;Computational Thinking;Digital Humanities;Data Visualization;Educational Curriculum},
  doi={10.1109/LACLO56648.2022.10013462},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9889511,
  author={Lupetti, Maria Luce and Van Mechelen, Maarten},
  booktitle={2022 17th ACM/IEEE International Conference on Human-Robot Interaction (HRI)}, 
  title={Promoting Children's Critical Thinking Towards Robotics through Robot Deception}, 
  year={2022},
  volume={},
  number={},
  pages={588-597},
  abstract={The need for critically reflecting on the deceptive nature of advanced technologies, such as social robots, is urging academia and civil society to rethink education and the skills needed by future generations. The promotion of critical thinking, however, remains largely unaddressed within the field of educational robotics. To address this gap and question if and how robots can be used to promote critical thinking in young children's education, we conducted an explorative design study named Bringing Shybo Home. Through this study, in which a robot was used as a springboard for debate with twenty 8- to 9-year-old children at school, we exemplify how the deceptive nature of robots, if embraced and magnified in order for it to become explicitly controversial, can be used to nurture children's critical mindset.},
  keywords={Ethics;Social robots;Education;Faces;deception;societal impact;critical thinking;design exploration;educational robotics},
  doi={10.1109/HRI53351.2022.9889511},
  ISSN={},
  month={March},}@INPROCEEDINGS{8878556,
  author={Riza, Lala Septem and Aryani, Irma Ayu and Wihardi, Yaya and Rahman, Eka Fitrajaya and Herbert and Haviluddin},
  booktitle={2018 2nd East Indonesia Conference on Computer and Information Technology (EIConCIT)}, 
  title={Development of Computational Story for Teaching Algorithm and Programming}, 
  year={2018},
  volume={},
  number={},
  pages={326-329},
  abstract={Algorithms and programming is a basic course in the department of computer science that teaches about the logic of thinking and basic programming techniques. However, it is known that students are difficult to understand it. Therefore, this study focuses on developing an application, called computational story, to teach the subject of algorithm and programming with the problem-posing approach and story problems. To achieve this goal, a model that considers the following aspects: basic structure in programming in C language, case studies, and choice of answer categories, is built. Then, an experimental research was conducted in a school to be seen to improve the students' understanding of algorithm and programming. The results obtained indicate that there is an increase in students' understanding, and this application can be used also to assess the critical thinking level of students in the future work.},
  keywords={Computational modeling;Programming profession;Graphical user interfaces;Information technology;Computer science education;problem posing;learning model;critical thinking;computational story},
  doi={10.1109/EIConCIT.2018.8878556},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{5579404,
  author={Yan Cui and Xin-Rong Li and Jun-Tao Wang},
  booktitle={2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE)}, 
  title={Computation method investigation on thinking route}, 
  year={2010},
  volume={6},
  number={},
  pages={V6-146-V6-149},
  abstract={On the basis of analysis to existing literatures by which the thinking problems are studied using mathematic method and according to nerve foundation of thinking of human brain, several concepts such as thinking map and thinking route are proposed in this paper by imitating neuron (a kind of chemical substance) transition procedures (routes) during thinking of human brain as maps in discrete mathematics. Number of thinking routes is calculated by means of digraph adjacency matrix theory in graph theory. After comparison, the results basically satisfy the thinking routes in reality.},
  keywords={Mathematics;neuron;synapse;thinking map;thinking route;adjacency matrix},
  doi={10.1109/ICACTE.2010.5579404},
  ISSN={2154-7505},
  month={Aug},}@INPROCEEDINGS{1186019,
  author={Yu-chu Yeh},
  booktitle={International Conference on Computers in Education, 2002. Proceedings.}, 
  title={Preservice teachers' thinking styles, dispositions, and changes in their teacher behaviors}, 
  year={2002},
  volume={},
  number={},
  pages={610-611 vol.1},
  abstract={Understanding preservice teachers' thinking styles and dispositions and how these are related to positive changes in their teacher behaviors provide valuable information for teacher preparation. This study aimed to investigate the relationship between preservice teachers' critical-thinking dispositions and three thinking styles (judicial, legislative, and executive) and their behavior change in a computer simulation. 178 preservice teachers participated in this study. Their interactive teaching experiences were measured via the CS-TGCTS simulation. The findings in this study suggest that preservice teachers with a high level of critical-thinking dispositions and those with judicial or legislative thinking styles are analytical and reflective vis A-vis their teaching practice and, as a consequence, they experienced great behavior change, whereas those with executive styles did not exhibit significant behavior change at the end of the simulated teaching.},
  keywords={Computer simulation;Computational modeling;Computer science education;Analysis of variance;Testing;Analytical models;Large-scale systems;Problem-solving;Educational programs},
  doi={10.1109/CIE.2002.1186019},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10342890,
  author={Vieira, Camilo and Restrepo, David and De La Hoz, Jose L.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Computational Notebooks in a Finite Element Analysis Course: Engineering Students' Reflections on the Value and Challenges of Computational Approaches}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This work-in-progress paper introduces an innovative approach that uses computational notebooks to teach Finite Element Analysis (FEA) in a Mechanical Engineering undergraduate course to aid the understanding of complex phenomena in Mechanics of Materials, and enhance students' computational thinking skills. Research indicates that students, irrespective of their educational level, face difficulties in grasping fundamental concepts in mechanics of materials. These challenges arise from the inherent complexity of concepts like stress, strain, torsion, and buckling, which are difficult to observe, hindering comprehension. Therefore, this work aims to leverage the synergy between mechanics of materials and computational principles to actively engage students in advanced topics such as structural strength, failure of structures, and sensitivity analysis, through the use of computational notebooks. To evaluate the effectiveness of this approach, we first asked students to analyze truss structures using hand calculations following the discrete stiffness method within a Finite Element Analysis framework. Subsequently, we implemented the same method as a simulation tool in a MATLAB Computational Notebook. Finally, we asked the students to reflect on: (1) the value of using computational methods to approach Finite Element Analysis when compared to hand calculations; (2) the difficulties they faced when implementing the activities in the MATLAB Computational Notebook; (3) the support they required to successfully complete these activities; and (4) the effectiveness of the simulation tool in understanding the effect of forces and stress distributions in structures. We anticipate that computational notebooks will provide an ideal platform for sharing lessons and tutorials, enhancing student engagement, and promoting active learning. Students have access to the complete source code, allowing them to develop computational skills. Early exposure to coding, modeling, and simulation techniques is crucial in preparing students for the computational demands of modern engineering workplaces.},
  keywords={Visualization;Sensitivity analysis;Source coding;Tutorials;Reflection;Finite element analysis;Mechanical engineering;Computational notebooks;mechanics of materials;computational thinking;threshold concepts;Finite Element Analysis},
  doi={10.1109/FIE58773.2023.10342890},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{7344063,
  author={Nesiba, Natasha and Pontelli, Enrico and Staley, Timothy},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={DISSECT: Exploring the relationship between computational thinking and English literature in K-12 curricula}, 
  year={2015},
  volume={},
  number={},
  pages={1-8},
  abstract={DISSECT (DIScover SciEnce through Computational Thinking) is a project aimed at introducing students to computer science principles by establishing computational thinking (CT) as a problem-solving technique within middle school and high school Science, Technology, Engineering, and Mathematics (STEM) courses. While DISSECT has shown successful integration of CT into middle school and high school STEM curricula, illustrating the pervasive nature of CT, a question remained; “can CT also be infused into humanities courses (e.g., English, Art, History) in addition to scientific courses (e.g., Chemistry, Biology, Computer Science)?” The answer is positive. The objective of this paper is to present one approach to bridge the gap between CT and humanities through the curriculum of a 12th-grade English Literature course. The course blends CT practices with composition and literature to provide students with the ability to write critical and comparative analyses of selected literature. This paper will describe multiple modules that integrate computational thinking into the course, and discuss the results and assessment tools used to measure student competency in computational thinking.},
  keywords={Algorithm design and analysis;Fellows;Computer science;Education;Google;Computers;Problem-solving;Computer science;Computer science education;Computational thinking;English literature;K-12},
  doi={10.1109/FIE.2015.7344063},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9778055,
  author={Chen, Bing-Hong and Huang, Tsui-Feng and Chou, Sheng-Chieh},
  booktitle={2021 International Conference on Technologies and Applications of Artificial Intelligence (TAAI)}, 
  title={Research on Teaching Effectiveness of Computational Thinking Based on Service Learning}, 
  year={2021},
  volume={},
  number={},
  pages={155-161},
  abstract={Computational thinking has been widely regarded as an important ability to adapt to the future. College students use the knowledge they have learned to help elementary students in the community learn computational thinking, thereby enhancing the motivation and achievement of the course. Use Scratch software tools to support the learning of computational thinking. In addition to cultivating students’ basic knowledge and abilities, it also assists the lack of learning resources in community elementary schools through practical actions of service learning, so that students can focus their learning on task-base purposes. Comprehensive research and analysis are conducted based on the evaluation of the students' completed works, the learning satisfaction scale, and the data of the key indicators of self-evaluation of computational thinking, plus the questionnaire survey of the primary school students receiving assistance. The results show that: it helps to stimulate students' desire to learn, thereby significantly improving academic performance and learning motivation. At the same time, it makes students have self-confidence and a sense of accomplishment, and makes learners aware of the inadequacy of self-learning, and promotes their willingness to learn from passive to active.},
  keywords={Education;Learning (artificial intelligence);Task analysis;Software tools;computational thinking;learning motivation;task-based instruction;Scratch},
  doi={10.1109/TAAI54685.2021.00037},
  ISSN={2376-6824},
  month={Nov},}@INPROCEEDINGS{7851769,
  author={Silapachote, Piyanuch and Srisuphab, Ananta},
  booktitle={2016 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Teaching and learning computational thinking through solving problems in Artificial Intelligence: On designing introductory engineering and computing courses}, 
  year={2016},
  volume={},
  number={},
  pages={50-54},
  abstract={At the core of every computing related discipline and impacting everyone everywhere, computational thinking or CT has increasingly emerged as its own subject in all levels of education. How to effectively teach CT skills poses real challenges and creates opportunities. Focusing on engineering and computer science undergraduates, we resourcefully integrated elements of Artificial Intelligence (AI) into introductory computing courses. In addition to a comprehension of the essence of CT, AI enabled inspirations of collaborative problem solving beyond abstraction, logical reasoning, critical, and analytical thinking. It fostered the study of basic data structures and algorithms. Students enjoyed active learning classrooms. Learning to learn, they constructed essential knowledge from solving exciting AI puzzles, competing in strategic AI games, and participating in intellectual discussion. Every activity is designed to allow students to fully engage their mental tools. Neither coding nor programming was required.},
  keywords={Handheld computers;Conferences;Education;Decision support systems;Computer science;Search problems;computational thinking (CT);artificial intelligence (AI);collaborative problem solving;active learning classrooms},
  doi={10.1109/TALE.2016.7851769},
  ISSN={2470-6698},
  month={Dec},}@ARTICLE{9536372,
  author={Zapata-C&#x00E1;ceres, Mar&#x00ED;a and Mart&#x00ED;n-Barroso, Estefan&#x00ED;a and Rom&#x00E1;n-Gonz&#x00E1;lez, Marcos},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Collaborative Game-Based Environment and Assessment Tool for Learning Computational Thinking in Primary School: A Case Study}, 
  year={2021},
  volume={14},
  number={5},
  pages={576-589},
  abstract={Computational thinking (CT) can be considered a 21st century core skill and, accordingly, it should be taught to students at an early age. Nevertheless, the implementation of CT in school curricula is still in an experimental stage, given that different performance metrics remain unclear, including the appropriate age for learning each skill, the significant and achievable computational concepts for each school year, teaching strategies, learning effectiveness, and strategies for assessing development. Based upon constructivist problem-solving learning strategies and supported by a three-dimensional framework, a game-based environment with both individual and collaborative playing modes has been developed as a learning and an assessment tool via learning analytics. Moreover, an exploratory case study has been carried out involving 176 primary school students. Results suggest that this environment is suitable as a learning and assessment tool for CT skills in primary school, providing enduring learning, particularly when it engages the collaborative playing mode. It seems to be better adapted to early primary school stage students, who showed greater improvements and who were able to assimilate more computational concepts than expected. Likewise, special needs or low percentile students benefit even more greatly from the learning tool and especially from the collaborative playing mode. The combination of different assessment methodologies&#x2014;including CT pre- and posttests, data-driven analytics, direct observation, and questionnaires&#x2014;provides assessment for each of the framework computational dimensions.},
  keywords={Collaboration;Problem-solving;Tools;Education;Programming profession;Games;Visualization;Assessment;collaborative learning;computational thinking (CT);early childhood education;educational games;learning environments;programming.},
  doi={10.1109/TLT.2021.3111108},
  ISSN={1939-1382},
  month={Oct},}@ARTICLE{9286386,
  author={Kazimoglu, Cagin},
  journal={IEEE Access}, 
  title={Enhancing Confidence in Using Computational Thinking Skills via Playing a Serious Game: A Case Study to Increase Motivation in Learning Computer Programming}, 
  year={2020},
  volume={8},
  number={},
  pages={221831-221851},
  abstract={Computer Science (CS) is a profession that positively impacts every single area of society without which today's world would come to a complete halt. Yet, there is a consensus that CS has serious conundrums particularly in attracting students, low motivation for learning computer programming and developing computational thinking (CT) skills. New motivational methods are needed to take the attention of students and adapt to their learning patterns as how people learn have changed drastically over the last two decades. To address these issues, video games and video game-based tools are proposed as a primary approach for motivating and supporting students in developing their skills in CT and support their learning of introductory programming. This research is concerned with the capture of statistical evidence on the educational effectiveness of playing a serious game specifically designed to enhance the development of CT skills to facilitate learning introductory computer programming. A total of 190 students were invited to participate in a quasi-experimental pre-post study for the purpose of analyzing the impact of an adhoc game on students' confidence in learning programming constructs and using their skills in CT. All students were studying a CS degree at the time and they were all registered to a first-year computer programming course. 151 out of 190 students successfully completed the study and the findings suggest that a) the intrinsic motivation to learn programming; b) students' perception of their knowledge and their tangible knowledge in key programming constructs (i.e. programming sequence, methods, decision making and loops); and c) students' confidence in using their CT skills were all statistically and significantly improved after playing the game. Additionally, students perceived computer programming significantly less difficult in their post study responses when compared to their pre study responses.},
  keywords={Programming profession;Games;Visualization;Tools;Syntactics;Education;Computer languages;Computational thinking;serious games;computer programming;video game design;game-based learning;gamification},
  doi={10.1109/ACCESS.2020.3043278},
  ISSN={2169-3536},
  month={},}@ARTICLE{10506466,
  author={Kaleem, Muhammad and Hassan, Muhammad Awais and Khurshid, Syed Khaldoon},
  journal={IEEE Access}, 
  title={A Machine Learning-Based Adaptive Feedback System to Enhance Programming Skill Using Computational Thinking}, 
  year={2024},
  volume={12},
  number={},
  pages={59431-59440},
  abstract={The solution of a typical programming task involves algorithmic thinking, pattern recognition, decomposition, and abstraction skills. These skills are basic pillars of Computational thinking (CT) and are essential for a computer programmer. Therefore, a programming teacher needs to take these skills into account for the evaluation of students. Existing methods for improving programming competency don’t consider the Computational Thinking of students and perform grading of students without taking these skills into account. Due to this limitation, deficiencies of these skills in students remain unrevealed, posing difficulties for educators to provide need-oriented feedback. The performance of programming students is thus hindered by a lack of interventions. This study proposes a method to evaluate programming students in terms of CT skill components and group them based on their skill set. In this study, 780 students of object-oriented programming (OOP) class were given programming assignments for assessment of programming competencies. These students were then given small programming tasks requiring different computational thinking skill components for their solutions. A machine learning approach was used to perform grouping of these students based on their scores. Six groups of programming students, each having its own set of skill deficiencies, were identified as a result of clustering. One of the groups had an empty set of skill deficiencies and consisted of students proficient in programming. Each of the other five groups had a non-empty set of skill deficiencies and comprised non-proficient programming students. A group-specific skill development plan was built for the groups having skill deficiencies. It was found that such feedback was very effective and improved the CT skill deficiencies of 82% of students.},
  keywords={Programming;Programming profession;Codes;Task analysis;Source coding;Clustering algorithms;Feedback;Cognitive systems;Object oriented programming;Machine learning;Education;Performance evaluation;Computational thinking assessment;feedback;K-means clustering;programming},
  doi={10.1109/ACCESS.2024.3391873},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{10487240,
  author={Li, Jiang and Cuddapah, Jennifer and Torres-Crespo, Marisel and Stewart, Ann and Williams, Anthony},
  booktitle={2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)}, 
  title={Promoting K-12 Computer Science Education : A Computational Thinking Partnership Project}, 
  year={2023},
  volume={},
  number={},
  pages={1054-1058},
  abstract={This paper describes a collaborative project that was conducted to promote Computer Science (CS) and Computational Thinking (CT) Education among pre-service and in-service teachers as well as Teacher Preparation Faculty. More than 40 pre-service and in-service teachers and 9 Education faculty members from three schools participated in a learning experience designed to address the K-12 Computer Science Framework [1] and Maryland's K-12 Computer Science Standards. The collaboration was designed to develop CS/CT knowledge, understanding, skills and application among participants. In phase one of the project, pre-service and in-service teachers explored CS educational hard/software platforms and used open-source sites such as Sphero Edu, Wonder Workshop, Scratch and Code.org. They envisioned how activities apply to K-8 classrooms, and they worked collaboratively to design a problem-based project for their own students. In phase two of the project, teacher preparation faculty were trained to integrate CS and CT into several preservice courses as well as build into the coursework sequence meaningful experiences that would expose future teachers to CS and CT knowledge and skills so that they could then incorporate these into their own K-8 lesson plans. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge. The feedback from the participants shows positive results.},
  keywords={Computer science;Conferences;Education;Collaboration;Computer science education;Standards;computer science education;computer science teaching standard;computation thinking;professional development},
  doi={10.1109/CSCE60160.2023.00175},
  ISSN={},
  month={July},}@INPROCEEDINGS{10871090,
  author={Ozawa, T. and Matsumoto, M.},
  booktitle={2025 IEEE/SICE International Symposium on System Integration (SII)}, 
  title={Development of a Computational Thinking Learning Tool Using a Railway Toy and Music}, 
  year={2025},
  volume={},
  number={},
  pages={715-721},
  abstract={In Japan, programming education in elementary schools has begun in 2020, and it is necessary to foster programming thinking effectively. Various learning tools have been developed to introduce programming concepts, and many studies have been conducted to develop tools using music to foster computational thinking that includes programming thinking. In this study, we focused on the affinity between the basic movements of the railway toy and the melodies and chord progressions, and we developed a learning tool to foster computational thinking by combining music and the railway toy. In this study, an activity using this tool was developed and subjects were asked to experience the activity. Based on the subjects' progress in the activity and their opinions in the questionnaire, the improvement of the activity is discussed.},
  keywords={Toy manufacturing industry;Education;System integration;Rail transportation;Programming profession},
  doi={10.1109/SII59315.2025.10871090},
  ISSN={2474-2325},
  month={Jan},}@INPROCEEDINGS{8103502,
  author={Malizia, Alessio and Fogli, Daniela and Danesi, Federico and Turchi, Tommaso and Bell, David},
  booktitle={2017 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={TAPASPlay: A game-based learning approach to foster computation thinking skills}, 
  year={2017},
  volume={},
  number={},
  pages={345-346},
  abstract={In this paper we describe how to use a Game-Based Learning (GBL) approach to help end-user programmers to develop Computational Thinking (CT) skills. CT represents a framework consisting of a set of skills such as: abstraction, decomposition and more in general problem solving expressed in a computational form (algorithmic thinking) that can be easily formalised into a computer program. Those skills are beneficial for end-user programmers in order to model a task for being tackled with computational tools, e.g. spreadsheets, domain specific and visual languages. TAPASPlay is an engaging GBL platform designed to help end-user to learn algorithmic thinking.},
  keywords={Games;Shape;Force;Metals;Visualization;Programming;Smart phones;Computational Thinking;Game-Based Learning;End-User Programming},
  doi={10.1109/VLHCC.2017.8103502},
  ISSN={1943-6106},
  month={Oct},}@ARTICLE{8012290,
  author={Yaşar, Osman},
  journal={Computing in Science & Engineering}, 
  title={The Essence of Computational Thinking}, 
  year={2017},
  volume={19},
  number={4},
  pages={74-82},
  abstract={A decade of discourse to capture the essence of computational thinking has resulted in a broad set of skills whose teaching continue to pose challenges because of the reliance on the use of electronic computers and programming concepts. This article not only links computational thinking skills to fundamental cognitive competencies but also describes pedagogical tools that have proven effective in teaching them at early ages.},
  keywords={Computational modeling;Cognitive systems;Deductive databases;Brain modeling;Computational modeling;Programming;modeling and simulation;deductive and inductive reasoning;computational thinking;scientific computing},
  doi={10.1109/MCSE.2017.3151241},
  ISSN={1558-366X},
  month={},}@INPROCEEDINGS{9006485,
  author={Marciano, Richard and Agarrat, Sarah and Frisch, Hannah and Hunt, Margaret Rose and Jain, Kanishka and Kocienda, Genevieve and Krauss, Hannah and Liu, Chenxi and McKinley, Mary and Mir, Danish and Mullane, Connor and Patterson, Emery and Pradhan, Debashish and Santos, James and Schams, Britton and Shiue, Hilary Szu Yin and Silva, Andy Jose and Suri, Mayhah and Turabi, Tahura and Vasselli, Mirielle and Xu, Jiale},
  booktitle={2019 IEEE International Conference on Big Data (Big Data)}, 
  title={Reframing Digital Curation Practices through a Computational Thinking Framework}, 
  year={2019},
  volume={},
  number={},
  pages={3126-3135},
  abstract={We describe the value of reframing digital curation practices through a computational thinking (CT) framework. Using a case study that demonstrates computational treatments of World War II Japanese-American Incarceration Camp Records, we demonstrate the applicability of CT with respect to: (1) Detecting personally identifiable information, (2) Developing name registries, (3) Integrating vital records, (4) Designing controlled vocabularies, (5) Mapping events and people, and (6) Connecting events and people through networks. The work was carried out by 5 teams of students in an 8week digital curation exploration and development sprint.},
  keywords={Big Data;Conferences;Computational Thinking;Digital Curation;Computational Archival Science (CAS);Japanese American WWII Incarceration Camps},
  doi={10.1109/BigData47090.2019.9006485},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{6427135,
  author={Barcelos, Thiago Schumacher and Silveira, Ismar Frango},
  booktitle={2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)}, 
  title={Teaching Computational Thinking in initial series An analysis of the confluence among mathematics and Computer Sciences in elementary education and its implications for higher education}, 
  year={2012},
  volume={},
  number={},
  pages={1-8},
  abstract={The pervasiveness of computer devices in everyday situations poses a fundamental question about Computer Sciences as being part of those known as basic sciences. However, it would be more beneficial not to consider computation only as a technique, but instead as a way of reasoning and problem solving. Under this perspective, there are inherent relationships among the knowledge, skills and attitudes that emanate from this field and those ones commonly related to Math. This paper discusses the relationship between the so-named Computational Thinking and the foundations of Math Education, based on a literature review. Three groups of skills that can be jointly developed by both areas are identified and some challenges and implications for education in Computer Sciences are discussed.},
  keywords={Mathematics;Computers;Computational modeling;Cognition;Games;Educational institutions;Computational thinking;Mathematics;didactic strategies},
  doi={10.1109/CLEI.2012.6427135},
  ISSN={},
  month={Oct},}
